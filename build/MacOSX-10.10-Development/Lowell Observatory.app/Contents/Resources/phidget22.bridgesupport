<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='PhidgetGPS_Date' type='{_PhidgetGPS_Date=&quot;tm_mday&quot;s&quot;tm_mon&quot;s&quot;tm_year&quot;s}'>
<field declared_type='int16_t' name='tm_mday' type='s'/>
<field declared_type='int16_t' name='tm_mon' type='s'/>
<field declared_type='int16_t' name='tm_year' type='s'/>
</struct>
<struct name='PhidgetGPS_DateHandle' type='{_PhidgetGPS_DateHandle=&quot;tm_mday&quot;s&quot;tm_mon&quot;s&quot;tm_year&quot;s}'>
<field declared_type='int16_t' name='tm_mday' type='s'/>
<field declared_type='int16_t' name='tm_mon' type='s'/>
<field declared_type='int16_t' name='tm_year' type='s'/>
</struct>
<struct name='PhidgetGPS_GPGGA' type='{_PhidgetGPS_GPGGA=&quot;latitude&quot;d&quot;longitude&quot;d&quot;fixQuality&quot;s&quot;numSatellites&quot;s&quot;horizontalDilution&quot;d&quot;altitude&quot;d&quot;heightOfGeoid&quot;d}'>
<field declared_type='double' name='latitude' type='d'/>
<field declared_type='double' name='longitude' type='d'/>
<field declared_type='int16_t' name='fixQuality' type='s'/>
<field declared_type='int16_t' name='numSatellites' type='s'/>
<field declared_type='double' name='horizontalDilution' type='d'/>
<field declared_type='double' name='altitude' type='d'/>
<field declared_type='double' name='heightOfGeoid' type='d'/>
</struct>
<struct name='PhidgetGPS_GPGGAHandle' type='{_PhidgetGPS_GPGGAHandle=&quot;latitude&quot;d&quot;longitude&quot;d&quot;fixQuality&quot;s&quot;numSatellites&quot;s&quot;horizontalDilution&quot;d&quot;altitude&quot;d&quot;heightOfGeoid&quot;d}'>
<field declared_type='double' name='latitude' type='d'/>
<field declared_type='double' name='longitude' type='d'/>
<field declared_type='int16_t' name='fixQuality' type='s'/>
<field declared_type='int16_t' name='numSatellites' type='s'/>
<field declared_type='double' name='horizontalDilution' type='d'/>
<field declared_type='double' name='altitude' type='d'/>
<field declared_type='double' name='heightOfGeoid' type='d'/>
</struct>
<struct name='PhidgetGPS_GPGSA' type='{_PhidgetGPS_GPGSA=&quot;mode&quot;c&quot;fixType&quot;s&quot;satUsed&quot;[12s]&quot;posnDilution&quot;d&quot;horizDilution&quot;d&quot;vertDilution&quot;d}'>
<field declared_type='char' name='mode' type='c'/>
<field declared_type='int16_t' name='fixType' type='s'/>
<field declared_type='int16_t*' name='satUsed' type='[12s]'/>
<field declared_type='double' name='posnDilution' type='d'/>
<field declared_type='double' name='horizDilution' type='d'/>
<field declared_type='double' name='vertDilution' type='d'/>
</struct>
<struct name='PhidgetGPS_GPGSAHandle' type='{_PhidgetGPS_GPGSAHandle=&quot;mode&quot;c&quot;fixType&quot;s&quot;satUsed&quot;[12s]&quot;posnDilution&quot;d&quot;horizDilution&quot;d&quot;vertDilution&quot;d}'>
<field declared_type='char' name='mode' type='c'/>
<field declared_type='int16_t' name='fixType' type='s'/>
<field declared_type='int16_t*' name='satUsed' type='[12s]'/>
<field declared_type='double' name='posnDilution' type='d'/>
<field declared_type='double' name='horizDilution' type='d'/>
<field declared_type='double' name='vertDilution' type='d'/>
</struct>
<struct name='PhidgetGPS_GPRMC' type='{_PhidgetGPS_GPRMC=&quot;status&quot;c&quot;latitude&quot;d&quot;longitude&quot;d&quot;speedKnots&quot;d&quot;heading&quot;d&quot;magneticVariation&quot;d&quot;mode&quot;c}'>
<field declared_type='char' name='status' type='c'/>
<field declared_type='double' name='latitude' type='d'/>
<field declared_type='double' name='longitude' type='d'/>
<field declared_type='double' name='speedKnots' type='d'/>
<field declared_type='double' name='heading' type='d'/>
<field declared_type='double' name='magneticVariation' type='d'/>
<field declared_type='char' name='mode' type='c'/>
</struct>
<struct name='PhidgetGPS_GPRMCHandle' type='{_PhidgetGPS_GPRMCHandle=&quot;status&quot;c&quot;latitude&quot;d&quot;longitude&quot;d&quot;speedKnots&quot;d&quot;heading&quot;d&quot;magneticVariation&quot;d&quot;mode&quot;c}'>
<field declared_type='char' name='status' type='c'/>
<field declared_type='double' name='latitude' type='d'/>
<field declared_type='double' name='longitude' type='d'/>
<field declared_type='double' name='speedKnots' type='d'/>
<field declared_type='double' name='heading' type='d'/>
<field declared_type='double' name='magneticVariation' type='d'/>
<field declared_type='char' name='mode' type='c'/>
</struct>
<struct name='PhidgetGPS_GPVTG' type='{_PhidgetGPS_GPVTG=&quot;trueHeading&quot;d&quot;magneticHeading&quot;d&quot;speedKnots&quot;d&quot;speed&quot;d&quot;mode&quot;c}'>
<field declared_type='double' name='trueHeading' type='d'/>
<field declared_type='double' name='magneticHeading' type='d'/>
<field declared_type='double' name='speedKnots' type='d'/>
<field declared_type='double' name='speed' type='d'/>
<field declared_type='char' name='mode' type='c'/>
</struct>
<struct name='PhidgetGPS_GPVTGHandle' type='{_PhidgetGPS_GPVTGHandle=&quot;trueHeading&quot;d&quot;magneticHeading&quot;d&quot;speedKnots&quot;d&quot;speed&quot;d&quot;mode&quot;c}'>
<field declared_type='double' name='trueHeading' type='d'/>
<field declared_type='double' name='magneticHeading' type='d'/>
<field declared_type='double' name='speedKnots' type='d'/>
<field declared_type='double' name='speed' type='d'/>
<field declared_type='char' name='mode' type='c'/>
</struct>
<struct name='PhidgetGPS_NMEAData' type='{_PhidgetGPS_NMEAData=&quot;GGA&quot;{_PhidgetGPS_GPGGA=&quot;latitude&quot;d&quot;longitude&quot;d&quot;fixQuality&quot;s&quot;numSatellites&quot;s&quot;horizontalDilution&quot;d&quot;altitude&quot;d&quot;heightOfGeoid&quot;d}&quot;GSA&quot;{_PhidgetGPS_GPGSA=&quot;mode&quot;c&quot;fixType&quot;s&quot;satUsed&quot;[12s]&quot;posnDilution&quot;d&quot;horizDilution&quot;d&quot;vertDilution&quot;d}&quot;RMC&quot;{_PhidgetGPS_GPRMC=&quot;status&quot;c&quot;latitude&quot;d&quot;longitude&quot;d&quot;speedKnots&quot;d&quot;heading&quot;d&quot;magneticVariation&quot;d&quot;mode&quot;c}&quot;VTG&quot;{_PhidgetGPS_GPVTG=&quot;trueHeading&quot;d&quot;magneticHeading&quot;d&quot;speedKnots&quot;d&quot;speed&quot;d&quot;mode&quot;c}}'>
<field declared_type='PhidgetGPS_GPGGA' name='GGA' type='{_PhidgetGPS_GPGGA=&quot;latitude&quot;d&quot;longitude&quot;d&quot;fixQuality&quot;s&quot;numSatellites&quot;s&quot;horizontalDilution&quot;d&quot;altitude&quot;d&quot;heightOfGeoid&quot;d}'/>
<field declared_type='PhidgetGPS_GPGSA' name='GSA' type='{_PhidgetGPS_GPGSA=&quot;mode&quot;c&quot;fixType&quot;s&quot;satUsed&quot;[12s]&quot;posnDilution&quot;d&quot;horizDilution&quot;d&quot;vertDilution&quot;d}'/>
<field declared_type='PhidgetGPS_GPRMC' name='RMC' type='{_PhidgetGPS_GPRMC=&quot;status&quot;c&quot;latitude&quot;d&quot;longitude&quot;d&quot;speedKnots&quot;d&quot;heading&quot;d&quot;magneticVariation&quot;d&quot;mode&quot;c}'/>
<field declared_type='PhidgetGPS_GPVTG' name='VTG' type='{_PhidgetGPS_GPVTG=&quot;trueHeading&quot;d&quot;magneticHeading&quot;d&quot;speedKnots&quot;d&quot;speed&quot;d&quot;mode&quot;c}'/>
</struct>
<struct name='PhidgetGPS_NMEADataHandle' type='{_PhidgetGPS_NMEADataHandle=&quot;GGA&quot;{_PhidgetGPS_GPGGA=&quot;latitude&quot;d&quot;longitude&quot;d&quot;fixQuality&quot;s&quot;numSatellites&quot;s&quot;horizontalDilution&quot;d&quot;altitude&quot;d&quot;heightOfGeoid&quot;d}&quot;GSA&quot;{_PhidgetGPS_GPGSA=&quot;mode&quot;c&quot;fixType&quot;s&quot;satUsed&quot;[12s]&quot;posnDilution&quot;d&quot;horizDilution&quot;d&quot;vertDilution&quot;d}&quot;RMC&quot;{_PhidgetGPS_GPRMC=&quot;status&quot;c&quot;latitude&quot;d&quot;longitude&quot;d&quot;speedKnots&quot;d&quot;heading&quot;d&quot;magneticVariation&quot;d&quot;mode&quot;c}&quot;VTG&quot;{_PhidgetGPS_GPVTG=&quot;trueHeading&quot;d&quot;magneticHeading&quot;d&quot;speedKnots&quot;d&quot;speed&quot;d&quot;mode&quot;c}}'>
<field declared_type='PhidgetGPS_GPGGA' name='GGA' type='{_PhidgetGPS_GPGGA=&quot;latitude&quot;d&quot;longitude&quot;d&quot;fixQuality&quot;s&quot;numSatellites&quot;s&quot;horizontalDilution&quot;d&quot;altitude&quot;d&quot;heightOfGeoid&quot;d}'/>
<field declared_type='PhidgetGPS_GPGSA' name='GSA' type='{_PhidgetGPS_GPGSA=&quot;mode&quot;c&quot;fixType&quot;s&quot;satUsed&quot;[12s]&quot;posnDilution&quot;d&quot;horizDilution&quot;d&quot;vertDilution&quot;d}'/>
<field declared_type='PhidgetGPS_GPRMC' name='RMC' type='{_PhidgetGPS_GPRMC=&quot;status&quot;c&quot;latitude&quot;d&quot;longitude&quot;d&quot;speedKnots&quot;d&quot;heading&quot;d&quot;magneticVariation&quot;d&quot;mode&quot;c}'/>
<field declared_type='PhidgetGPS_GPVTG' name='VTG' type='{_PhidgetGPS_GPVTG=&quot;trueHeading&quot;d&quot;magneticHeading&quot;d&quot;speedKnots&quot;d&quot;speed&quot;d&quot;mode&quot;c}'/>
</struct>
<struct name='PhidgetGPS_Time' type='{_PhidgetGPS_Time=&quot;tm_ms&quot;s&quot;tm_sec&quot;s&quot;tm_min&quot;s&quot;tm_hour&quot;s}'>
<field declared_type='int16_t' name='tm_ms' type='s'/>
<field declared_type='int16_t' name='tm_sec' type='s'/>
<field declared_type='int16_t' name='tm_min' type='s'/>
<field declared_type='int16_t' name='tm_hour' type='s'/>
</struct>
<struct name='PhidgetGPS_TimeHandle' type='{_PhidgetGPS_TimeHandle=&quot;tm_ms&quot;s&quot;tm_sec&quot;s&quot;tm_min&quot;s&quot;tm_hour&quot;s}'>
<field declared_type='int16_t' name='tm_ms' type='s'/>
<field declared_type='int16_t' name='tm_sec' type='s'/>
<field declared_type='int16_t' name='tm_min' type='s'/>
<field declared_type='int16_t' name='tm_hour' type='s'/>
</struct>
<struct name='PhidgetIR_CodeInfo' type='{_PhidgetIR_CodeInfo=&quot;bitCount&quot;I&quot;encoding&quot;i&quot;length&quot;i&quot;gap&quot;I&quot;trail&quot;I&quot;header&quot;[2I]&quot;one&quot;[2I]&quot;zero&quot;[2I]&quot;repeat&quot;[26I]&quot;minRepeat&quot;I&quot;dutyCycle&quot;d&quot;carrierFrequency&quot;I&quot;toggleMask&quot;[33c]}'>
<field declared_type='uint32_t' name='bitCount' type='I'/>
<field declared_type='PhidgetIR_Encoding' name='encoding' type='i'/>
<field declared_type='PhidgetIR_Length' name='length' type='i'/>
<field declared_type='uint32_t' name='gap' type='I'/>
<field declared_type='uint32_t' name='trail' type='I'/>
<field declared_type='uint32_t*' name='header' type='[2I]'/>
<field declared_type='uint32_t*' name='one' type='[2I]'/>
<field declared_type='uint32_t*' name='zero' type='[2I]'/>
<field declared_type='uint32_t*' name='repeat' type='[26I]'/>
<field declared_type='uint32_t' name='minRepeat' type='I'/>
<field declared_type='double' name='dutyCycle' type='d'/>
<field declared_type='uint32_t' name='carrierFrequency' type='I'/>
<field declared_type='char*' name='toggleMask' type='[33c]'/>
</struct>
<struct name='PhidgetIR_CodeInfoHandle' type='{_PhidgetIR_CodeInfoHandle=&quot;bitCount&quot;I&quot;encoding&quot;i&quot;length&quot;i&quot;gap&quot;I&quot;trail&quot;I&quot;header&quot;[2I]&quot;one&quot;[2I]&quot;zero&quot;[2I]&quot;repeat&quot;[26I]&quot;minRepeat&quot;I&quot;dutyCycle&quot;d&quot;carrierFrequency&quot;I&quot;toggleMask&quot;[33c]}'>
<field declared_type='uint32_t' name='bitCount' type='I'/>
<field declared_type='PhidgetIR_Encoding' name='encoding' type='i'/>
<field declared_type='PhidgetIR_Length' name='length' type='i'/>
<field declared_type='uint32_t' name='gap' type='I'/>
<field declared_type='uint32_t' name='trail' type='I'/>
<field declared_type='uint32_t*' name='header' type='[2I]'/>
<field declared_type='uint32_t*' name='one' type='[2I]'/>
<field declared_type='uint32_t*' name='zero' type='[2I]'/>
<field declared_type='uint32_t*' name='repeat' type='[26I]'/>
<field declared_type='uint32_t' name='minRepeat' type='I'/>
<field declared_type='double' name='dutyCycle' type='d'/>
<field declared_type='uint32_t' name='carrierFrequency' type='I'/>
<field declared_type='char*' name='toggleMask' type='[33c]'/>
</struct>
<struct name='PhidgetServer' type='{_PhidgetServer=&quot;name&quot;*&quot;stype&quot;*&quot;type&quot;i&quot;flags&quot;i&quot;addr&quot;*&quot;host&quot;*&quot;port&quot;i&quot;handle&quot;^v}'>
<field declared_type='PhidgetServerType' name='type' type='i'/>
<field declared_type='int' name='flags' type='i'/>
<field declared_type='int' name='port' type='i'/>
</struct>
<struct name='PhidgetServerHandle' type='{_PhidgetServerHandle=&quot;name&quot;*&quot;stype&quot;*&quot;type&quot;i&quot;flags&quot;i&quot;addr&quot;*&quot;host&quot;*&quot;port&quot;i&quot;handle&quot;^v}'>
<field declared_type='PhidgetServerType' name='type' type='i'/>
<field declared_type='int' name='flags' type='i'/>
<field declared_type='int' name='port' type='i'/>
</struct>
<struct name='Phidget_UnitInfo' type='{_Phidget_UnitInfo=&quot;unit&quot;i&quot;name&quot;*&quot;symbol&quot;*}'>
<field declared_type='Phidget_Unit' name='unit' type='i'/>
</struct>
<struct name='Phidget_UnitInfoHandle' type='{_Phidget_UnitInfoHandle=&quot;unit&quot;i&quot;name&quot;*&quot;symbol&quot;*}'>
<field declared_type='Phidget_Unit' name='unit' type='i'/>
</struct>
<opaque name='Phidget' type='^{_Phidget=}'/>
<opaque name='PhidgetAccelerometerHandle' type='^{_PhidgetAccelerometer=}'/>
<opaque name='PhidgetBLDCMotorHandle' type='^{_PhidgetBLDCMotor=}'/>
<opaque name='PhidgetCapacitiveTouchHandle' type='^{_PhidgetCapacitiveTouch=}'/>
<opaque name='PhidgetCurrentInputHandle' type='^{_PhidgetCurrentInput=}'/>
<opaque name='PhidgetDCMotorHandle' type='^{_PhidgetDCMotor=}'/>
<opaque name='PhidgetDataAdapterHandle' type='^{_PhidgetDataAdapter=}'/>
<opaque name='PhidgetDictionaryHandle' type='^{_PhidgetDictionary=}'/>
<opaque name='PhidgetDigitalInputHandle' type='^{_PhidgetDigitalInput=}'/>
<opaque name='PhidgetDigitalOutputHandle' type='^{_PhidgetDigitalOutput=}'/>
<opaque name='PhidgetDistanceSensorHandle' type='^{_PhidgetDistanceSensor=}'/>
<opaque name='PhidgetEncoderHandle' type='^{_PhidgetEncoder=}'/>
<opaque name='PhidgetFrequencyCounterHandle' type='^{_PhidgetFrequencyCounter=}'/>
<opaque name='PhidgetGPSHandle' type='^{_PhidgetGPS=}'/>
<opaque name='PhidgetGyroscopeHandle' type='^{_PhidgetGyroscope=}'/>
<opaque name='PhidgetHandle' type='^{_Phidget=}'/>
<opaque name='PhidgetHubHandle' type='^{_PhidgetHub=}'/>
<opaque name='PhidgetHumiditySensorHandle' type='^{_PhidgetHumiditySensor=}'/>
<opaque name='PhidgetIRHandle' type='^{_PhidgetIR=}'/>
<opaque name='PhidgetLCDHandle' type='^{_PhidgetLCD=}'/>
<opaque name='PhidgetLightSensorHandle' type='^{_PhidgetLightSensor=}'/>
<opaque name='PhidgetMagnetometerHandle' type='^{_PhidgetMagnetometer=}'/>
<opaque name='PhidgetManagerHandle' type='^{_PhidgetManager=}'/>
<opaque name='PhidgetMotorPositionControllerHandle' type='^{_PhidgetMotorPositionController=}'/>
<opaque name='PhidgetPHSensorHandle' type='^{_PhidgetPHSensor=}'/>
<opaque name='PhidgetPowerGuardHandle' type='^{_PhidgetPowerGuard=}'/>
<opaque name='PhidgetPressureSensorHandle' type='^{_PhidgetPressureSensor=}'/>
<opaque name='PhidgetRCServoHandle' type='^{_PhidgetRCServo=}'/>
<opaque name='PhidgetRFIDHandle' type='^{_PhidgetRFID=}'/>
<opaque name='PhidgetResistanceInputHandle' type='^{_PhidgetResistanceInput=}'/>
<opaque name='PhidgetSoundSensorHandle' type='^{_PhidgetSoundSensor=}'/>
<opaque name='PhidgetSpatialHandle' type='^{_PhidgetSpatial=}'/>
<opaque name='PhidgetStepperHandle' type='^{_PhidgetStepper=}'/>
<opaque name='PhidgetTemperatureSensorHandle' type='^{_PhidgetTemperatureSensor=}'/>
<opaque name='PhidgetVoltageInputHandle' type='^{_PhidgetVoltageInput=}'/>
<opaque name='PhidgetVoltageOutputHandle' type='^{_PhidgetVoltageOutput=}'/>
<opaque name='PhidgetVoltageRatioInputHandle' type='^{_PhidgetVoltageRatioInput=}'/>
<enum name='BRIDGE_GAIN_1' value='1'/>
<enum name='BRIDGE_GAIN_128' value='8'/>
<enum name='BRIDGE_GAIN_16' value='5'/>
<enum name='BRIDGE_GAIN_2' value='2'/>
<enum name='BRIDGE_GAIN_32' value='6'/>
<enum name='BRIDGE_GAIN_4' value='3'/>
<enum name='BRIDGE_GAIN_64' value='7'/>
<enum name='BRIDGE_GAIN_8' value='4'/>
<enum name='CONTROL_MODE_RUN' value='1'/>
<enum name='CONTROL_MODE_STEP' value='0'/>
<enum name='EEPHIDGET_BADPOWER' value='4104'/>
<enum name='EEPHIDGET_BADVERSION' value='1'/>
<enum name='EEPHIDGET_BUSY' value='2'/>
<enum name='EEPHIDGET_DISPATCH' value='4'/>
<enum name='EEPHIDGET_ENERGYDUMP' value='4110'/>
<enum name='EEPHIDGET_FAILSAFE' value='4108'/>
<enum name='EEPHIDGET_MOTORSTALL' value='4111'/>
<enum name='EEPHIDGET_NETWORK' value='3'/>
<enum name='EEPHIDGET_OK' value='4096'/>
<enum name='EEPHIDGET_OUTOFRANGE' value='4103'/>
<enum name='EEPHIDGET_OVERCURRENT' value='4102'/>
<enum name='EEPHIDGET_OVERRUN' value='4098'/>
<enum name='EEPHIDGET_OVERTEMP' value='4101'/>
<enum name='EEPHIDGET_OVERVOLTAGE' value='4107'/>
<enum name='EEPHIDGET_PACKETLOST' value='4099'/>
<enum name='EEPHIDGET_SATURATION' value='4105'/>
<enum name='EEPHIDGET_VOLTAGEERROR' value='4109'/>
<enum name='EEPHIDGET_WRAP' value='4100'/>
<enum name='ENCODER_IO_MODE_LINE_DRIVER_10K' value='3'/>
<enum name='ENCODER_IO_MODE_LINE_DRIVER_2K2' value='2'/>
<enum name='ENCODER_IO_MODE_OPEN_COLLECTOR_10K' value='5'/>
<enum name='ENCODER_IO_MODE_OPEN_COLLECTOR_2K2' value='4'/>
<enum name='ENCODER_IO_MODE_PUSH_PULL' value='1'/>
<enum name='EPHIDGET_2BIG' value='54'/>
<enum name='EPHIDGET_ACCESS' value='7'/>
<enum name='EPHIDGET_AGAIN' value='22'/>
<enum name='EPHIDGET_BADPASSWORD' value='37'/>
<enum name='EPHIDGET_BADVERSION' value='55'/>
<enum name='EPHIDGET_BUSY' value='9'/>
<enum name='EPHIDGET_CLOSED' value='56'/>
<enum name='EPHIDGET_CONNREF' value='35'/>
<enum name='EPHIDGET_CONNRESET' value='46'/>
<enum name='EPHIDGET_DUPLICATE' value='27'/>
<enum name='EPHIDGET_EOF' value='31'/>
<enum name='EPHIDGET_EXIST' value='10'/>
<enum name='EPHIDGET_FAULT' value='8'/>
<enum name='EPHIDGET_FBIG' value='17'/>
<enum name='EPHIDGET_HOSTUNREACH' value='48'/>
<enum name='EPHIDGET_INTERRUPTED' value='4'/>
<enum name='EPHIDGET_INVALID' value='13'/>
<enum name='EPHIDGET_INVALIDARG' value='21'/>
<enum name='EPHIDGET_INVALIDPACKET' value='53'/>
<enum name='EPHIDGET_IO' value='5'/>
<enum name='EPHIDGET_ISDIR' value='12'/>
<enum name='EPHIDGET_KEEPALIVE' value='58'/>
<enum name='EPHIDGET_MFILE' value='15'/>
<enum name='EPHIDGET_NETUNAVAIL' value='45'/>
<enum name='EPHIDGET_NFILE' value='14'/>
<enum name='EPHIDGET_NODEV' value='40'/>
<enum name='EPHIDGET_NOENT' value='2'/>
<enum name='EPHIDGET_NOMEMORY' value='6'/>
<enum name='EPHIDGET_NOSPC' value='16'/>
<enum name='EPHIDGET_NOTATTACHED' value='52'/>
<enum name='EPHIDGET_NOTCONFIGURED' value='57'/>
<enum name='EPHIDGET_NOTDIR' value='11'/>
<enum name='EPHIDGET_OK' value='0'/>
<enum name='EPHIDGET_PERM' value='1'/>
<enum name='EPHIDGET_PIPE' value='41'/>
<enum name='EPHIDGET_RESOLV' value='44'/>
<enum name='EPHIDGET_RO' value='19'/>
<enum name='EPHIDGET_ROFS' value='18'/>
<enum name='EPHIDGET_TIMEOUT' value='3'/>
<enum name='EPHIDGET_UNEXPECTED' value='28'/>
<enum name='EPHIDGET_UNKNOWNVAL' value='51'/>
<enum name='EPHIDGET_UNSUPPORTED' value='20'/>
<enum name='EPHIDGET_WRONGDEVICE' value='50'/>
<enum name='FAN_MODE_AUTO' value='3'/>
<enum name='FAN_MODE_OFF' value='1'/>
<enum name='FAN_MODE_ON' value='2'/>
<enum name='FILTER_TYPE_LOGIC_LEVEL' value='2'/>
<enum name='FILTER_TYPE_ZERO_CROSSING' value='1'/>
<enum name='FONT_5x8' value='4'/>
<enum name='FONT_6x10' value='3'/>
<enum name='FONT_6x12' value='5'/>
<enum name='FONT_User1' value='1'/>
<enum name='FONT_User2' value='2'/>
<enum name='INPUT_MODE_NPN' value='1'/>
<enum name='INPUT_MODE_PNP' value='2'/>
<enum name='IR_ENCODING_BIPHASE' value='4'/>
<enum name='IR_ENCODING_PULSE' value='3'/>
<enum name='IR_ENCODING_RC5' value='5'/>
<enum name='IR_ENCODING_RC6' value='6'/>
<enum name='IR_ENCODING_SPACE' value='2'/>
<enum name='IR_ENCODING_UNKNOWN' value='1'/>
<enum name='IR_LENGTH_CONSTANT' value='2'/>
<enum name='IR_LENGTH_UNKNOWN' value='1'/>
<enum name='IR_LENGTH_VARIABLE' value='3'/>
<enum name='LED_FORWARD_VOLTAGE_1_7V' value='1'/>
<enum name='LED_FORWARD_VOLTAGE_2_75V' value='2'/>
<enum name='LED_FORWARD_VOLTAGE_3_2V' value='3'/>
<enum name='LED_FORWARD_VOLTAGE_3_9V' value='4'/>
<enum name='LED_FORWARD_VOLTAGE_4_0V' value='5'/>
<enum name='LED_FORWARD_VOLTAGE_4_8V' value='6'/>
<enum name='LED_FORWARD_VOLTAGE_5_0V' value='7'/>
<enum name='LED_FORWARD_VOLTAGE_5_6V' value='8'/>
<enum name='MESHMODE_ROUTER' value='1'/>
<enum name='MESHMODE_SLEEPYENDDEVICE' value='2'/>
<enum name='PHIDCHCLASS_ACCELEROMETER' value='1'/>
<enum name='PHIDCHCLASS_BLDCMOTOR' value='35'/>
<enum name='PHIDCHCLASS_CAPACITIVETOUCH' value='14'/>
<enum name='PHIDCHCLASS_CURRENTINPUT' value='2'/>
<enum name='PHIDCHCLASS_DATAADAPTER' value='3'/>
<enum name='PHIDCHCLASS_DCMOTOR' value='4'/>
<enum name='PHIDCHCLASS_DICTIONARY' value='36'/>
<enum name='PHIDCHCLASS_DIGITALINPUT' value='5'/>
<enum name='PHIDCHCLASS_DIGITALOUTPUT' value='6'/>
<enum name='PHIDCHCLASS_DISTANCESENSOR' value='7'/>
<enum name='PHIDCHCLASS_ENCODER' value='8'/>
<enum name='PHIDCHCLASS_FIRMWAREUPGRADE' value='32'/>
<enum name='PHIDCHCLASS_FREQUENCYCOUNTER' value='9'/>
<enum name='PHIDCHCLASS_GENERIC' value='33'/>
<enum name='PHIDCHCLASS_GPS' value='10'/>
<enum name='PHIDCHCLASS_GYROSCOPE' value='12'/>
<enum name='PHIDCHCLASS_HUB' value='13'/>
<enum name='PHIDCHCLASS_HUMIDITYSENSOR' value='15'/>
<enum name='PHIDCHCLASS_IR' value='16'/>
<enum name='PHIDCHCLASS_LCD' value='11'/>
<enum name='PHIDCHCLASS_LIGHTSENSOR' value='17'/>
<enum name='PHIDCHCLASS_MAGNETOMETER' value='18'/>
<enum name='PHIDCHCLASS_MESHDONGLE' value='19'/>
<enum name='PHIDCHCLASS_MOTORPOSITIONCONTROLLER' value='34'/>
<enum name='PHIDCHCLASS_NOTHING' value='0'/>
<enum name='PHIDCHCLASS_PHSENSOR' value='37'/>
<enum name='PHIDCHCLASS_POWERGUARD' value='20'/>
<enum name='PHIDCHCLASS_PRESSURESENSOR' value='21'/>
<enum name='PHIDCHCLASS_RCSERVO' value='22'/>
<enum name='PHIDCHCLASS_RESISTANCEINPUT' value='23'/>
<enum name='PHIDCHCLASS_RFID' value='24'/>
<enum name='PHIDCHCLASS_SOUNDSENSOR' value='25'/>
<enum name='PHIDCHCLASS_SPATIAL' value='26'/>
<enum name='PHIDCHCLASS_STEPPER' value='27'/>
<enum name='PHIDCHCLASS_TEMPERATURESENSOR' value='28'/>
<enum name='PHIDCHCLASS_VOLTAGEINPUT' value='29'/>
<enum name='PHIDCHCLASS_VOLTAGEOUTPUT' value='30'/>
<enum name='PHIDCHCLASS_VOLTAGERATIOINPUT' value='31'/>
<enum name='PHIDCHSUBCLASS_DIGITALOUTPUT_DUTY_CYCLE' value='16'/>
<enum name='PHIDCHSUBCLASS_DIGITALOUTPUT_LED_DRIVER' value='17'/>
<enum name='PHIDCHSUBCLASS_ENCODER_MODE_SETTABLE' value='96'/>
<enum name='PHIDCHSUBCLASS_LCD_GRAPHIC' value='80'/>
<enum name='PHIDCHSUBCLASS_LCD_TEXT' value='81'/>
<enum name='PHIDCHSUBCLASS_NONE' value='1'/>
<enum name='PHIDCHSUBCLASS_RCSERVO_EMBEDDED' value='112'/>
<enum name='PHIDCHSUBCLASS_TEMPERATURESENSOR_RTD' value='32'/>
<enum name='PHIDCHSUBCLASS_TEMPERATURESENSOR_THERMOCOUPLE' value='33'/>
<enum name='PHIDCHSUBCLASS_VOLTAGEINPUT_SENSOR_PORT' value='48'/>
<enum name='PHIDCHSUBCLASS_VOLTAGERATIOINPUT_BRIDGE' value='65'/>
<enum name='PHIDCHSUBCLASS_VOLTAGERATIOINPUT_SENSOR_PORT' value='64'/>
<enum name='PHIDCLASS_ACCELEROMETER' value='1'/>
<enum name='PHIDCLASS_ADVANCEDSERVO' value='2'/>
<enum name='PHIDCLASS_ANALOG' value='3'/>
<enum name='PHIDCLASS_BRIDGE' value='4'/>
<enum name='PHIDCLASS_DICTIONARY' value='24'/>
<enum name='PHIDCLASS_ENCODER' value='5'/>
<enum name='PHIDCLASS_FIRMWAREUPGRADE' value='23'/>
<enum name='PHIDCLASS_FREQUENCYCOUNTER' value='6'/>
<enum name='PHIDCLASS_GENERIC' value='22'/>
<enum name='PHIDCLASS_GPS' value='7'/>
<enum name='PHIDCLASS_HUB' value='8'/>
<enum name='PHIDCLASS_INTERFACEKIT' value='9'/>
<enum name='PHIDCLASS_IR' value='10'/>
<enum name='PHIDCLASS_LED' value='11'/>
<enum name='PHIDCLASS_MESHDONGLE' value='12'/>
<enum name='PHIDCLASS_MOTORCONTROL' value='13'/>
<enum name='PHIDCLASS_NOTHING' value='0'/>
<enum name='PHIDCLASS_PHSENSOR' value='14'/>
<enum name='PHIDCLASS_RFID' value='15'/>
<enum name='PHIDCLASS_SERVO' value='16'/>
<enum name='PHIDCLASS_SPATIAL' value='17'/>
<enum name='PHIDCLASS_STEPPER' value='18'/>
<enum name='PHIDCLASS_TEMPERATURESENSOR' value='19'/>
<enum name='PHIDCLASS_TEXTLCD' value='20'/>
<enum name='PHIDCLASS_VINT' value='21'/>
<enum name='PHIDGETSERVER_DEVICE' value='2'/>
<enum name='PHIDGETSERVER_DEVICELISTENER' value='1'/>
<enum name='PHIDGETSERVER_DEVICEREMOTE' value='3'/>
<enum name='PHIDGETSERVER_NONE' value='0'/>
<enum name='PHIDGETSERVER_SBC' value='7'/>
<enum name='PHIDGETSERVER_WWW' value='5'/>
<enum name='PHIDGETSERVER_WWWLISTENER' value='4'/>
<enum name='PHIDGETSERVER_WWWREMOTE' value='6'/>
<enum name='PHIDGET_LOG_CRITICAL' value='1'/>
<enum name='PHIDGET_LOG_DEBUG' value='5'/>
<enum name='PHIDGET_LOG_ERROR' value='2'/>
<enum name='PHIDGET_LOG_INFO' value='4'/>
<enum name='PHIDGET_LOG_VERBOSE' value='6'/>
<enum name='PHIDGET_LOG_WARNING' value='3'/>
<enum name='PHIDID_1000' value='2'/>
<enum name='PHIDID_1001' value='3'/>
<enum name='PHIDID_1002' value='4'/>
<enum name='PHIDID_1008' value='5'/>
<enum name='PHIDID_1010_1013_1018_1019' value='6'/>
<enum name='PHIDID_1011' value='7'/>
<enum name='PHIDID_1012' value='8'/>
<enum name='PHIDID_1014' value='9'/>
<enum name='PHIDID_1015' value='10'/>
<enum name='PHIDID_1016' value='11'/>
<enum name='PHIDID_1017' value='12'/>
<enum name='PHIDID_1023' value='13'/>
<enum name='PHIDID_1024' value='14'/>
<enum name='PHIDID_1030' value='15'/>
<enum name='PHIDID_1031' value='16'/>
<enum name='PHIDID_1032' value='17'/>
<enum name='PHIDID_1040' value='18'/>
<enum name='PHIDID_1041' value='19'/>
<enum name='PHIDID_1042' value='20'/>
<enum name='PHIDID_1043' value='21'/>
<enum name='PHIDID_1044' value='22'/>
<enum name='PHIDID_1045' value='23'/>
<enum name='PHIDID_1046' value='24'/>
<enum name='PHIDID_1047' value='25'/>
<enum name='PHIDID_1048' value='26'/>
<enum name='PHIDID_1049' value='27'/>
<enum name='PHIDID_1051' value='28'/>
<enum name='PHIDID_1052' value='29'/>
<enum name='PHIDID_1053' value='30'/>
<enum name='PHIDID_1054' value='31'/>
<enum name='PHIDID_1055' value='32'/>
<enum name='PHIDID_1056' value='33'/>
<enum name='PHIDID_1057' value='34'/>
<enum name='PHIDID_1058' value='35'/>
<enum name='PHIDID_1059' value='36'/>
<enum name='PHIDID_1060' value='37'/>
<enum name='PHIDID_1061' value='38'/>
<enum name='PHIDID_1062' value='39'/>
<enum name='PHIDID_1063' value='40'/>
<enum name='PHIDID_1064' value='41'/>
<enum name='PHIDID_1065' value='42'/>
<enum name='PHIDID_1066' value='43'/>
<enum name='PHIDID_1067' value='44'/>
<enum name='PHIDID_1202_1203' value='45'/>
<enum name='PHIDID_1204' value='46'/>
<enum name='PHIDID_1215__1218' value='47'/>
<enum name='PHIDID_1219__1222' value='48'/>
<enum name='PHIDID_ADP1000' value='49'/>
<enum name='PHIDID_ADP1001' value='50'/>
<enum name='PHIDID_DAQ1000' value='51'/>
<enum name='PHIDID_DAQ1200' value='52'/>
<enum name='PHIDID_DAQ1300' value='53'/>
<enum name='PHIDID_DAQ1301' value='54'/>
<enum name='PHIDID_DAQ1400' value='55'/>
<enum name='PHIDID_DAQ1500' value='56'/>
<enum name='PHIDID_DCC1000' value='57'/>
<enum name='PHIDID_DCC1001' value='110'/>
<enum name='PHIDID_DCC1100' value='108'/>
<enum name='PHIDID_DICTIONARY' value='111'/>
<enum name='PHIDID_DIGITALINPUT_PORT' value='95'/>
<enum name='PHIDID_DIGITALOUTPUT_PORT' value='96'/>
<enum name='PHIDID_DST1000' value='58'/>
<enum name='PHIDID_DST1200' value='59'/>
<enum name='PHIDID_ENC1000' value='60'/>
<enum name='PHIDID_FIRMWARE_UPGRADE_SPI' value='104'/>
<enum name='PHIDID_FIRMWARE_UPGRADE_STM32F0' value='102'/>
<enum name='PHIDID_FIRMWARE_UPGRADE_STM8S' value='103'/>
<enum name='PHIDID_FIRMWARE_UPGRADE_USB' value='101'/>
<enum name='PHIDID_GENERICUSB' value='99'/>
<enum name='PHIDID_GENERICVINT' value='100'/>
<enum name='PHIDID_HIN1000' value='61'/>
<enum name='PHIDID_HIN1001' value='62'/>
<enum name='PHIDID_HIN1100' value='63'/>
<enum name='PHIDID_HIN1101' value='109'/>
<enum name='PHIDID_HUB0000' value='64'/>
<enum name='PHIDID_HUB0001' value='65'/>
<enum name='PHIDID_HUB0002' value='66'/>
<enum name='PHIDID_HUB0004' value='67'/>
<enum name='PHIDID_HUB0005' value='68'/>
<enum name='PHIDID_HUM1000' value='69'/>
<enum name='PHIDID_INTERFACEKIT_4_8_8' value='1'/>
<enum name='PHIDID_LCD1100' value='70'/>
<enum name='PHIDID_LED1000' value='71'/>
<enum name='PHIDID_LUX1000' value='72'/>
<enum name='PHIDID_MOT1100' value='73'/>
<enum name='PHIDID_MOT1101' value='74'/>
<enum name='PHIDID_NOTHING' value='0'/>
<enum name='PHIDID_OUT1000' value='75'/>
<enum name='PHIDID_OUT1001' value='76'/>
<enum name='PHIDID_OUT1002' value='77'/>
<enum name='PHIDID_OUT1100' value='78'/>
<enum name='PHIDID_PRE1000' value='79'/>
<enum name='PHIDID_RCC1000' value='80'/>
<enum name='PHIDID_REL1000' value='81'/>
<enum name='PHIDID_REL1100' value='82'/>
<enum name='PHIDID_REL1101' value='83'/>
<enum name='PHIDID_SAF1000' value='84'/>
<enum name='PHIDID_SND1000' value='85'/>
<enum name='PHIDID_STC1000' value='86'/>
<enum name='PHIDID_STC1001' value='115'/>
<enum name='PHIDID_TMP1000' value='87'/>
<enum name='PHIDID_TMP1100' value='88'/>
<enum name='PHIDID_TMP1101' value='89'/>
<enum name='PHIDID_TMP1200' value='90'/>
<enum name='PHIDID_TMP1300' value='91'/>
<enum name='PHIDID_USBSWITCH' value='116'/>
<enum name='PHIDID_VCP1000' value='92'/>
<enum name='PHIDID_VCP1001' value='93'/>
<enum name='PHIDID_VCP1002' value='94'/>
<enum name='PHIDID_VCP1100' value='105'/>
<enum name='PHIDID_VINTSERVO_S2313M' value='106'/>
<enum name='PHIDID_VINTSERVO_S3317M' value='112'/>
<enum name='PHIDID_VINTSERVO_S4309M' value='113'/>
<enum name='PHIDID_VINTSERVO_S4309R' value='114'/>
<enum name='PHIDID_VOLTAGEINPUT_PORT' value='97'/>
<enum name='PHIDID_VOLTAGERATIOINPUT_PORT' value='98'/>
<enum name='PHIDUNIT_AMPERE' value='10'/>
<enum name='PHIDUNIT_BOOLEAN' value='1'/>
<enum name='PHIDUNIT_CENTIMETER' value='5'/>
<enum name='PHIDUNIT_DECIBEL' value='3'/>
<enum name='PHIDUNIT_DEGREE_CELCIUS' value='13'/>
<enum name='PHIDUNIT_GAUSS' value='15'/>
<enum name='PHIDUNIT_GRAM' value='7'/>
<enum name='PHIDUNIT_KILOGRAM' value='8'/>
<enum name='PHIDUNIT_KILOPASCAL' value='11'/>
<enum name='PHIDUNIT_LUX' value='14'/>
<enum name='PHIDUNIT_METER' value='6'/>
<enum name='PHIDUNIT_MILLIAMPERE' value='9'/>
<enum name='PHIDUNIT_MILLIMETER' value='4'/>
<enum name='PHIDUNIT_NONE' value='0'/>
<enum name='PHIDUNIT_PERCENT' value='2'/>
<enum name='PHIDUNIT_PH' value='16'/>
<enum name='PHIDUNIT_VOLT' value='12'/>
<enum name='PHIDUNIT_WATT' value='17'/>
<enum name='PIXEL_STATE_INVERT' value='2'/>
<enum name='PIXEL_STATE_OFF' value='0'/>
<enum name='PIXEL_STATE_ON' value='1'/>
<enum name='PORT_MODE_DIGITAL_INPUT' value='1'/>
<enum name='PORT_MODE_DIGITAL_OUTPUT' value='2'/>
<enum name='PORT_MODE_VINT_PORT' value='0'/>
<enum name='PORT_MODE_VOLTAGE_INPUT' value='3'/>
<enum name='PORT_MODE_VOLTAGE_RATIO_INPUT' value='4'/>
<enum name='POWER_SUPPLY_12V' value='2'/>
<enum name='POWER_SUPPLY_24V' value='3'/>
<enum name='POWER_SUPPLY_OFF' value='1'/>
<enum name='PROTOCOL_EM4100' value='1'/>
<enum name='PROTOCOL_ISO11785_FDX_B' value='2'/>
<enum name='PROTOCOL_PHIDGETS' value='3'/>
<enum name='RCSERVO_VOLTAGE_5V' value='1'/>
<enum name='RCSERVO_VOLTAGE_6V' value='2'/>
<enum name='RCSERVO_VOLTAGE_7_4V' value='3'/>
<enum name='RTD_TYPE_PT1000_3850' value='2'/>
<enum name='RTD_TYPE_PT1000_3920' value='4'/>
<enum name='RTD_TYPE_PT100_3850' value='1'/>
<enum name='RTD_TYPE_PT100_3920' value='3'/>
<enum name='RTD_WIRE_SETUP_2WIRE' value='1'/>
<enum name='RTD_WIRE_SETUP_3WIRE' value='2'/>
<enum name='RTD_WIRE_SETUP_4WIRE' value='3'/>
<enum name='SCREEN_SIZE_1x16' value='4'/>
<enum name='SCREEN_SIZE_1x40' value='10'/>
<enum name='SCREEN_SIZE_1x8' value='2'/>
<enum name='SCREEN_SIZE_2x16' value='5'/>
<enum name='SCREEN_SIZE_2x20' value='7'/>
<enum name='SCREEN_SIZE_2x24' value='9'/>
<enum name='SCREEN_SIZE_2x40' value='11'/>
<enum name='SCREEN_SIZE_2x8' value='3'/>
<enum name='SCREEN_SIZE_4x16' value='6'/>
<enum name='SCREEN_SIZE_4x20' value='8'/>
<enum name='SCREEN_SIZE_4x40' value='12'/>
<enum name='SCREEN_SIZE_64x128' value='13'/>
<enum name='SCREEN_SIZE_NONE' value='1'/>
<enum name='SENSOR_TYPE_1101_SHARP_2D120X' value='11011'/>
<enum name='SENSOR_TYPE_1101_SHARP_2Y0A02' value='11013'/>
<enum name='SENSOR_TYPE_1101_SHARP_2Y0A21' value='11012'/>
<enum name='SENSOR_TYPE_1102' value='11020'/>
<enum name='SENSOR_TYPE_1103' value='11030'/>
<enum name='SENSOR_TYPE_1104' value='11040'/>
<enum name='SENSOR_TYPE_1105' value='11050'/>
<enum name='SENSOR_TYPE_1106' value='11060'/>
<enum name='SENSOR_TYPE_1107' value='11070'/>
<enum name='SENSOR_TYPE_1108' value='11080'/>
<enum name='SENSOR_TYPE_1109' value='11090'/>
<enum name='SENSOR_TYPE_1110' value='11100'/>
<enum name='SENSOR_TYPE_1111' value='11110'/>
<enum name='SENSOR_TYPE_1112' value='11120'/>
<enum name='SENSOR_TYPE_1113' value='11130'/>
<enum name='SENSOR_TYPE_1114' value='11140'/>
<enum name='SENSOR_TYPE_1115' value='11150'/>
<enum name='SENSOR_TYPE_1116' value='11160'/>
<enum name='SENSOR_TYPE_1117' value='11170'/>
<enum name='SENSOR_TYPE_1118_AC' value='11181'/>
<enum name='SENSOR_TYPE_1118_DC' value='11182'/>
<enum name='SENSOR_TYPE_1119_AC' value='11191'/>
<enum name='SENSOR_TYPE_1119_DC' value='11192'/>
<enum name='SENSOR_TYPE_1120' value='11200'/>
<enum name='SENSOR_TYPE_1121' value='11210'/>
<enum name='SENSOR_TYPE_1122_AC' value='11221'/>
<enum name='SENSOR_TYPE_1122_DC' value='11222'/>
<enum name='SENSOR_TYPE_1123' value='11230'/>
<enum name='SENSOR_TYPE_1124' value='11240'/>
<enum name='SENSOR_TYPE_1125_HUMIDITY' value='11251'/>
<enum name='SENSOR_TYPE_1125_TEMPERATURE' value='11252'/>
<enum name='SENSOR_TYPE_1126' value='11260'/>
<enum name='SENSOR_TYPE_1127' value='11270'/>
<enum name='SENSOR_TYPE_1128' value='11280'/>
<enum name='SENSOR_TYPE_1129' value='11290'/>
<enum name='SENSOR_TYPE_1130_ORP' value='11302'/>
<enum name='SENSOR_TYPE_1130_PH' value='11301'/>
<enum name='SENSOR_TYPE_1131' value='11310'/>
<enum name='SENSOR_TYPE_1132' value='11320'/>
<enum name='SENSOR_TYPE_1133' value='11330'/>
<enum name='SENSOR_TYPE_1134' value='11340'/>
<enum name='SENSOR_TYPE_1135' value='11350'/>
<enum name='SENSOR_TYPE_1136' value='11360'/>
<enum name='SENSOR_TYPE_1137' value='11370'/>
<enum name='SENSOR_TYPE_1138' value='11380'/>
<enum name='SENSOR_TYPE_1139' value='11390'/>
<enum name='SENSOR_TYPE_1140' value='11400'/>
<enum name='SENSOR_TYPE_1141' value='11410'/>
<enum name='SENSOR_TYPE_1142' value='11420'/>
<enum name='SENSOR_TYPE_1143' value='11430'/>
<enum name='SENSOR_TYPE_1146' value='11460'/>
<enum name='SENSOR_TYPE_3120' value='31200'/>
<enum name='SENSOR_TYPE_3121' value='31210'/>
<enum name='SENSOR_TYPE_3122' value='31220'/>
<enum name='SENSOR_TYPE_3123' value='31230'/>
<enum name='SENSOR_TYPE_3130' value='31300'/>
<enum name='SENSOR_TYPE_3500' value='35000'/>
<enum name='SENSOR_TYPE_3501' value='35010'/>
<enum name='SENSOR_TYPE_3502' value='35020'/>
<enum name='SENSOR_TYPE_3503' value='35030'/>
<enum name='SENSOR_TYPE_3507' value='35070'/>
<enum name='SENSOR_TYPE_3508' value='35080'/>
<enum name='SENSOR_TYPE_3509' value='35090'/>
<enum name='SENSOR_TYPE_3510' value='35100'/>
<enum name='SENSOR_TYPE_3511' value='35110'/>
<enum name='SENSOR_TYPE_3512' value='35120'/>
<enum name='SENSOR_TYPE_3513' value='35130'/>
<enum name='SENSOR_TYPE_3514' value='35140'/>
<enum name='SENSOR_TYPE_3515' value='35150'/>
<enum name='SENSOR_TYPE_3516' value='35160'/>
<enum name='SENSOR_TYPE_3517' value='35170'/>
<enum name='SENSOR_TYPE_3518' value='35180'/>
<enum name='SENSOR_TYPE_3519' value='35190'/>
<enum name='SENSOR_TYPE_3520' value='35200'/>
<enum name='SENSOR_TYPE_3521' value='35210'/>
<enum name='SENSOR_TYPE_3522' value='35220'/>
<enum name='SENSOR_TYPE_3584' value='35840'/>
<enum name='SENSOR_TYPE_3585' value='35850'/>
<enum name='SENSOR_TYPE_3586' value='35860'/>
<enum name='SENSOR_TYPE_3587' value='35870'/>
<enum name='SENSOR_TYPE_3588' value='35880'/>
<enum name='SENSOR_TYPE_3589' value='35890'/>
<enum name='SENSOR_TYPE_VOLTAGE' value='0'/>
<enum name='SENSOR_TYPE_VOLTAGERATIO' value='0'/>
<enum name='SPL_RANGE_102dB' value='1'/>
<enum name='SPL_RANGE_82dB' value='2'/>
<enum name='THERMOCOUPLE_TYPE_E' value='3'/>
<enum name='THERMOCOUPLE_TYPE_J' value='1'/>
<enum name='THERMOCOUPLE_TYPE_K' value='2'/>
<enum name='THERMOCOUPLE_TYPE_T' value='4'/>
<enum name='VOLTAGE_OUTPUT_RANGE_10V' value='1'/>
<enum name='VOLTAGE_OUTPUT_RANGE_5V' value='2'/>
<enum name='VOLTAGE_RANGE_1000mV' value='6'/>
<enum name='VOLTAGE_RANGE_10mV' value='1'/>
<enum name='VOLTAGE_RANGE_15V' value='9'/>
<enum name='VOLTAGE_RANGE_200mV' value='3'/>
<enum name='VOLTAGE_RANGE_2V' value='7'/>
<enum name='VOLTAGE_RANGE_312_5mV' value='4'/>
<enum name='VOLTAGE_RANGE_400mV' value='5'/>
<enum name='VOLTAGE_RANGE_40V' value='10'/>
<enum name='VOLTAGE_RANGE_40mV' value='2'/>
<enum name='VOLTAGE_RANGE_5V' value='8'/>
<enum name='VOLTAGE_RANGE_AUTO' value='11'/>
<function name='PhidgetAccelerometer_create'>
<arg declared_type='PhidgetAccelerometerHandle*' name='ch' type='^^{_PhidgetAccelerometer}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_delete'>
<arg declared_type='PhidgetAccelerometerHandle*' name='ch' type='^^{_PhidgetAccelerometer}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getAcceleration'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double (*)*' name='acceleration' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getAccelerationChangeTrigger'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double*' name='accelerationChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getAxisCount'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='int*' name='axisCount' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getDataInterval'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getMaxAcceleration'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double (*)*' name='maxAcceleration' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getMaxAccelerationChangeTrigger'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double*' name='maxAccelerationChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getMaxDataInterval'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getMinAcceleration'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double (*)*' name='minAcceleration' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getMinAccelerationChangeTrigger'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double*' name='minAccelerationChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getMinDataInterval'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_getTimestamp'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double*' name='timestamp' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_setAccelerationChangeTrigger'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='double' name='accelerationChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_setDataInterval'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetAccelerometer_setOnAccelerationChangeHandler'>
<arg declared_type='PhidgetAccelerometerHandle' name='ch' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='PhidgetAccelerometer_OnAccelerationChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetAccelerometerHandle' type='^{_PhidgetAccelerometer=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='double*' type='^d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_addPositionOffset'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double' name='positionOffset' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_create'>
<arg declared_type='PhidgetBLDCMotorHandle*' name='ch' type='^^{_PhidgetBLDCMotor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_delete'>
<arg declared_type='PhidgetBLDCMotorHandle*' name='ch' type='^^{_PhidgetBLDCMotor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getAcceleration'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='acceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getBrakingStrength'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='brakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getDataInterval'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMaxAcceleration'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='maxAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMaxBrakingStrength'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='maxBrakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMaxDataInterval'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMaxPosition'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='maxPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMaxStallVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='maxStallVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMaxVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='maxVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMinAcceleration'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='minAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMinBrakingStrength'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='minBrakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMinDataInterval'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMinPosition'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='minPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMinStallVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='minStallVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getMinVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='minVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getPosition'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='position' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getRescaleFactor'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='rescaleFactor' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getStallVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='stallVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getTargetBrakingStrength'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='targetBrakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getTargetVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='targetVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_getVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double*' name='velocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setAcceleration'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double' name='acceleration' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setDataInterval'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setOnBrakingStrengthChangeHandler'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='PhidgetBLDCMotor_OnBrakingStrengthChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetBLDCMotorHandle' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setOnPositionChangeHandler'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='PhidgetBLDCMotor_OnPositionChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetBLDCMotorHandle' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setOnVelocityUpdateHandler'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='PhidgetBLDCMotor_OnVelocityUpdateCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetBLDCMotorHandle' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setRescaleFactor'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double' name='rescaleFactor' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setStallVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double' name='stallVelocity' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setTargetBrakingStrength'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double' name='targetBrakingStrength' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetBLDCMotor_setTargetVelocity'>
<arg declared_type='PhidgetBLDCMotorHandle' name='ch' type='^{_PhidgetBLDCMotor=}'/>
<arg declared_type='double' name='targetVelocity' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_create'>
<arg declared_type='PhidgetCapacitiveTouchHandle*' name='ch' type='^^{_PhidgetCapacitiveTouch}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_delete'>
<arg declared_type='PhidgetCapacitiveTouchHandle*' name='ch' type='^^{_PhidgetCapacitiveTouch}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getDataInterval'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getIsTouched'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='int*' name='isTouched' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMaxDataInterval'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMaxSensitivity'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='maxSensitivity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMaxTouchValue'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='maxTouchValue' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMaxTouchValueChangeTrigger'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='maxTouchValueChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMinDataInterval'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMinSensitivity'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='minSensitivity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMinTouchValue'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='minTouchValue' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getMinTouchValueChangeTrigger'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='minTouchValueChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getSensitivity'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='sensitivity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getTouchValue'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='touchValue' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_getTouchValueChangeTrigger'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double*' name='touchValueChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_setDataInterval'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_setOnTouchEndHandler'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='PhidgetCapacitiveTouch_OnTouchEndCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetCapacitiveTouchHandle' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_setOnTouchHandler'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='PhidgetCapacitiveTouch_OnTouchCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetCapacitiveTouchHandle' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_setSensitivity'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double' name='sensitivity' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCapacitiveTouch_setTouchValueChangeTrigger'>
<arg declared_type='PhidgetCapacitiveTouchHandle' name='ch' type='^{_PhidgetCapacitiveTouch=}'/>
<arg declared_type='double' name='touchValueChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_create'>
<arg declared_type='PhidgetCurrentInputHandle*' name='ch' type='^^{_PhidgetCurrentInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_delete'>
<arg declared_type='PhidgetCurrentInputHandle*' name='ch' type='^^{_PhidgetCurrentInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getCurrent'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double*' name='current' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getCurrentChangeTrigger'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double*' name='currentChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getDataInterval'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getMaxCurrent'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double*' name='maxCurrent' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getMaxCurrentChangeTrigger'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double*' name='maxCurrentChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getMaxDataInterval'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getMinCurrent'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double*' name='minCurrent' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getMinCurrentChangeTrigger'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double*' name='minCurrentChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getMinDataInterval'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_getPowerSupply'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='Phidget_PowerSupply*' name='powerSupply' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_setCurrentChangeTrigger'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='double' name='currentChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_setDataInterval'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_setOnCurrentChangeHandler'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='PhidgetCurrentInput_OnCurrentChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetCurrentInputHandle' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetCurrentInput_setPowerSupply'>
<arg declared_type='PhidgetCurrentInputHandle' name='ch' type='^{_PhidgetCurrentInput=}'/>
<arg declared_type='Phidget_PowerSupply' name='powerSupply' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_create'>
<arg declared_type='PhidgetDCMotorHandle*' name='ch' type='^^{_PhidgetDCMotor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_delete'>
<arg declared_type='PhidgetDCMotorHandle*' name='ch' type='^^{_PhidgetDCMotor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getAcceleration'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='acceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getBackEMF'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='backEMF' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getBackEMFSensingState'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='int*' name='backEMFSensingState' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getBrakingStrength'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='brakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getCurrentLimit'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='currentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getCurrentRegulatorGain'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='currentRegulatorGain' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getDataInterval'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getFanMode'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='Phidget_FanMode*' name='fanMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMaxAcceleration'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='maxAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMaxBrakingStrength'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='maxBrakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMaxCurrentLimit'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='maxCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMaxCurrentRegulatorGain'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='maxCurrentRegulatorGain' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMaxDataInterval'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMaxVelocity'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='maxVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMinAcceleration'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='minAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMinBrakingStrength'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='minBrakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMinCurrentLimit'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='minCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMinCurrentRegulatorGain'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='minCurrentRegulatorGain' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMinDataInterval'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getMinVelocity'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='minVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getTargetBrakingStrength'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='targetBrakingStrength' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getTargetVelocity'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='targetVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_getVelocity'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double*' name='velocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setAcceleration'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double' name='acceleration' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setBackEMFSensingState'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='int' name='backEMFSensingState' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setCurrentLimit'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double' name='currentLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setCurrentRegulatorGain'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double' name='currentRegulatorGain' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setDataInterval'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setFanMode'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='Phidget_FanMode' name='fanMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setOnBackEMFChangeHandler'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='PhidgetDCMotor_OnBackEMFChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDCMotorHandle' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setOnBrakingStrengthChangeHandler'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='PhidgetDCMotor_OnBrakingStrengthChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDCMotorHandle' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setOnVelocityUpdateHandler'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='PhidgetDCMotor_OnVelocityUpdateCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDCMotorHandle' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setTargetBrakingStrength'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double' name='targetBrakingStrength' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDCMotor_setTargetVelocity'>
<arg declared_type='PhidgetDCMotorHandle' name='ch' type='^{_PhidgetDCMotor=}'/>
<arg declared_type='double' name='targetVelocity' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDataAdapter_create'>
<arg declared_type='PhidgetDataAdapterHandle*' name='ch' type='^^{_PhidgetDataAdapter}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDataAdapter_delete'>
<arg declared_type='PhidgetDataAdapterHandle*' name='ch' type='^^{_PhidgetDataAdapter}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDataAdapter_getMaxPacketLength'>
<arg declared_type='PhidgetDataAdapterHandle' name='ch' type='^{_PhidgetDataAdapter=}'/>
<arg declared_type='uint32_t*' name='maxPacketLength' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDataAdapter_sendPacket'>
<arg declared_type='PhidgetDataAdapterHandle' name='ch' type='^{_PhidgetDataAdapter=}'/>
<arg const='true' declared_type='uint8_t*' name='data' type='*'/>
<arg declared_type='size_t' name='length' type='L' type64='Q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDataAdapter_sendPacket_async'>
<arg declared_type='PhidgetDataAdapterHandle' name='ch' type='^{_PhidgetDataAdapter=}'/>
<arg const='true' declared_type='uint8_t*' name='data' type='*'/>
<arg declared_type='size_t' name='length' type='L' type64='Q'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetDataAdapter_setOnPacketHandler'>
<arg declared_type='PhidgetDataAdapterHandle' name='ch' type='^{_PhidgetDataAdapter=}'/>
<arg declared_type='PhidgetDataAdapter_OnPacketCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDataAdapterHandle' type='^{_PhidgetDataAdapter=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='uint8_t*' type='*'/>
<arg declared_type='size_t' type='L' type64='Q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_add'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg const='true' declared_type='char*' name='key' type='*'/>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_create'>
<arg declared_type='PhidgetDictionaryHandle*' name='ch' type='^^{_PhidgetDictionary}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_delete'>
<arg declared_type='PhidgetDictionaryHandle*' name='ch' type='^^{_PhidgetDictionary}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_get'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg const='true' declared_type='char*' name='key' type='*'/>
<arg declared_type='char*' name='value' type='*'/>
<arg declared_type='size_t' name='len' type='L' type64='Q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_remove'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg const='true' declared_type='char*' name='key' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_removeAll'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_scan'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg const='true' declared_type='char*' name='start' type='*'/>
<arg declared_type='char*' name='keyslist' type='*'/>
<arg declared_type='size_t' name='len' type='L' type64='Q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_set'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg const='true' declared_type='char*' name='key' type='*'/>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_setOnAddHandler'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg declared_type='PhidgetDictionary_OnAddCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDictionaryHandle' type='^{_PhidgetDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_setOnChangeCallbackHandler'>
<arg declared_type='PhidgetDictionary_OnChangeCallback' function_pointer='true' type='^?'>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_setOnRemoveHandler'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg declared_type='PhidgetDictionary_OnRemoveCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDictionaryHandle' type='^{_PhidgetDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_setOnUpdateHandler'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg declared_type='PhidgetDictionary_OnUpdateCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDictionaryHandle' type='^{_PhidgetDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDictionary_update'>
<arg declared_type='PhidgetDictionaryHandle' name='ch' type='^{_PhidgetDictionary=}'/>
<arg const='true' declared_type='char*' name='key' type='*'/>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_create'>
<arg declared_type='PhidgetDigitalInputHandle*' name='ch' type='^^{_PhidgetDigitalInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_delete'>
<arg declared_type='PhidgetDigitalInputHandle*' name='ch' type='^^{_PhidgetDigitalInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_getInputMode'>
<arg declared_type='PhidgetDigitalInputHandle' name='ch' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='Phidget_InputMode*' name='inputMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_getPowerSupply'>
<arg declared_type='PhidgetDigitalInputHandle' name='ch' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='Phidget_PowerSupply*' name='powerSupply' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_getState'>
<arg declared_type='PhidgetDigitalInputHandle' name='ch' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='int*' name='state' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_setInputMode'>
<arg declared_type='PhidgetDigitalInputHandle' name='ch' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='Phidget_InputMode' name='inputMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_setOnStateChangeHandler'>
<arg declared_type='PhidgetDigitalInputHandle' name='ch' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='PhidgetDigitalInput_OnStateChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDigitalInputHandle' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalInput_setPowerSupply'>
<arg declared_type='PhidgetDigitalInputHandle' name='ch' type='^{_PhidgetDigitalInput=}'/>
<arg declared_type='Phidget_PowerSupply' name='powerSupply' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_create'>
<arg declared_type='PhidgetDigitalOutputHandle*' name='ch' type='^^{_PhidgetDigitalOutput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_delete'>
<arg declared_type='PhidgetDigitalOutputHandle*' name='ch' type='^^{_PhidgetDigitalOutput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getDutyCycle'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double*' name='dutyCycle' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getLEDCurrentLimit'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double*' name='LEDCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getLEDForwardVoltage'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='PhidgetDigitalOutput_LEDForwardVoltage*' name='LEDForwardVoltage' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getMaxDutyCycle'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double*' name='maxDutyCycle' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getMaxLEDCurrentLimit'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double*' name='maxLEDCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getMinDutyCycle'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double*' name='minDutyCycle' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getMinLEDCurrentLimit'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double*' name='minLEDCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_getState'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='int*' name='state' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_setDutyCycle'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double' name='dutyCycle' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_setDutyCycle_async'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double' name='dutyCycle' type='d'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetDigitalOutput_setLEDCurrentLimit'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double' name='LEDCurrentLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_setLEDCurrentLimit_async'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='double' name='LEDCurrentLimit' type='d'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetDigitalOutput_setLEDForwardVoltage'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='PhidgetDigitalOutput_LEDForwardVoltage' name='LEDForwardVoltage' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_setState'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='int' name='state' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDigitalOutput_setState_async'>
<arg declared_type='PhidgetDigitalOutputHandle' name='ch' type='^{_PhidgetDigitalOutput=}'/>
<arg declared_type='int' name='state' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetDistanceSensor_create'>
<arg declared_type='PhidgetDistanceSensorHandle*' name='ch' type='^^{_PhidgetDistanceSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_delete'>
<arg declared_type='PhidgetDistanceSensorHandle*' name='ch' type='^^{_PhidgetDistanceSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getDataInterval'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getDistance'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='distance' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getDistanceChangeTrigger'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='distanceChangeTrigger' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getMaxDataInterval'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getMaxDistance'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='maxDistance' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getMaxDistanceChangeTrigger'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='maxDistanceChangeTrigger' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getMinDataInterval'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getMinDistance'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='minDistance' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getMinDistanceChangeTrigger'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='minDistanceChangeTrigger' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getSonarQuietMode'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='int*' name='sonarQuietMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_getSonarReflections'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t*' name='distances' type='^I'/>
<arg declared_type='uint32_t*' name='amplitudes' type='^I'/>
<arg declared_type='uint32_t*' name='count' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_setDataInterval'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_setDistanceChangeTrigger'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='uint32_t' name='distanceChangeTrigger' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_setOnDistanceChangeHandler'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='PhidgetDistanceSensor_OnDistanceChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDistanceSensorHandle' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='uint32_t' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_setOnSonarReflectionsUpdateHandler'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='PhidgetDistanceSensor_OnSonarReflectionsUpdateCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetDistanceSensorHandle' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='uint32_t*' type='^I'/>
<arg const='true' declared_type='uint32_t*' type='^I'/>
<arg declared_type='uint32_t' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetDistanceSensor_setSonarQuietMode'>
<arg declared_type='PhidgetDistanceSensorHandle' name='ch' type='^{_PhidgetDistanceSensor=}'/>
<arg declared_type='int' name='sonarQuietMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_create'>
<arg declared_type='PhidgetEncoderHandle*' name='ch' type='^^{_PhidgetEncoder}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_delete'>
<arg declared_type='PhidgetEncoderHandle*' name='ch' type='^^{_PhidgetEncoder}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getDataInterval'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getEnabled'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='int*' name='enabled' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getIOMode'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='Phidget_EncoderIOMode*' name='IOMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getIndexPosition'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='int64_t*' name='indexPosition' type='^q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getMaxDataInterval'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getMaxPositionChangeTrigger'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t*' name='maxPositionChangeTrigger' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getMinDataInterval'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getMinPositionChangeTrigger'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t*' name='minPositionChangeTrigger' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getPosition'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='int64_t*' name='position' type='^q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_getPositionChangeTrigger'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t*' name='positionChangeTrigger' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_setDataInterval'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_setEnabled'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='int' name='enabled' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_setIOMode'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='Phidget_EncoderIOMode' name='IOMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_setOnPositionChangeHandler'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='PhidgetEncoder_OnPositionChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetEncoderHandle' type='^{_PhidgetEncoder=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='double' type='d'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_setPosition'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='int64_t' name='position' type='q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetEncoder_setPositionChangeTrigger'>
<arg declared_type='PhidgetEncoderHandle' name='ch' type='^{_PhidgetEncoder=}'/>
<arg declared_type='uint32_t' name='positionChangeTrigger' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_create'>
<arg declared_type='PhidgetFrequencyCounterHandle*' name='ch' type='^^{_PhidgetFrequencyCounter}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_delete'>
<arg declared_type='PhidgetFrequencyCounterHandle*' name='ch' type='^^{_PhidgetFrequencyCounter}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getCount'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='uint64_t*' name='count' type='^Q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getDataInterval'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getEnabled'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='int*' name='enabled' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getFilterType'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='PhidgetFrequencyCounter_FilterType*' name='filterType' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getFrequency'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double*' name='frequency' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getFrequencyCutoff'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double*' name='frequencyCutoff' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getInputMode'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='Phidget_InputMode*' name='inputMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getMaxDataInterval'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getMaxFrequency'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double*' name='maxFrequency' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getMaxFrequencyCutoff'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double*' name='maxFrequencyCutoff' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getMinDataInterval'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getMinFrequencyCutoff'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double*' name='minFrequencyCutoff' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getPowerSupply'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='Phidget_PowerSupply*' name='powerSupply' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_getTimeElapsed'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double*' name='timeElapsed' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_reset'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setDataInterval'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setEnabled'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='int' name='enabled' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setFilterType'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='PhidgetFrequencyCounter_FilterType' name='filterType' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setFrequencyCutoff'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='double' name='frequencyCutoff' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setInputMode'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='Phidget_InputMode' name='inputMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setOnCountChangeHandler'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='PhidgetFrequencyCounter_OnCountChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetFrequencyCounterHandle' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='uint64_t' type='Q'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setOnFrequencyChangeHandler'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='PhidgetFrequencyCounter_OnFrequencyChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetFrequencyCounterHandle' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetFrequencyCounter_setPowerSupply'>
<arg declared_type='PhidgetFrequencyCounterHandle' name='ch' type='^{_PhidgetFrequencyCounter=}'/>
<arg declared_type='Phidget_PowerSupply' name='powerSupply' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_create'>
<arg declared_type='PhidgetGPSHandle*' name='ch' type='^^{_PhidgetGPS}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_delete'>
<arg declared_type='PhidgetGPSHandle*' name='ch' type='^^{_PhidgetGPS}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getAltitude'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='double*' name='altitude' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getDate'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='PhidgetGPS_Date*' name='date' type='^{_PhidgetGPS_Date=sss}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getHeading'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='double*' name='heading' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getLatitude'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='double*' name='latitude' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getLongitude'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='double*' name='longitude' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getNMEAData'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='PhidgetGPS_NMEAData*' name='NMEAData' type='^{_PhidgetGPS_NMEAData={_PhidgetGPS_GPGGA=ddssddd}{_PhidgetGPS_GPGSA=cs[12s]ddd}{_PhidgetGPS_GPRMC=cdddddc}{_PhidgetGPS_GPVTG=ddddc}}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getPositionFixState'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='int*' name='positionFixState' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getTime'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='PhidgetGPS_Time*' name='time' type='^{_PhidgetGPS_Time=ssss}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_getVelocity'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='double*' name='velocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_setOnHeadingChangeHandler'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='PhidgetGPS_OnHeadingChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetGPSHandle' type='^{_PhidgetGPS=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_setOnPositionChangeHandler'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='PhidgetGPS_OnPositionChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetGPSHandle' type='^{_PhidgetGPS=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGPS_setOnPositionFixStateChangeHandler'>
<arg declared_type='PhidgetGPSHandle' name='ch' type='^{_PhidgetGPS=}'/>
<arg declared_type='PhidgetGPS_OnPositionFixStateChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetGPSHandle' type='^{_PhidgetGPS=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_create'>
<arg declared_type='PhidgetGyroscopeHandle*' name='ch' type='^^{_PhidgetGyroscope}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_delete'>
<arg declared_type='PhidgetGyroscopeHandle*' name='ch' type='^^{_PhidgetGyroscope}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getAngularRate'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='double (*)*' name='angularRate' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getAxisCount'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='int*' name='axisCount' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getDataInterval'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getMaxAngularRate'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='double (*)*' name='maxAngularRate' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getMaxDataInterval'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getMinAngularRate'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='double (*)*' name='minAngularRate' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getMinDataInterval'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_getTimestamp'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='double*' name='timestamp' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_setDataInterval'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_setOnAngularRateUpdateHandler'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='PhidgetGyroscope_OnAngularRateUpdateCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetGyroscopeHandle' type='^{_PhidgetGyroscope=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='double*' type='^d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetGyroscope_zero'>
<arg declared_type='PhidgetGyroscopeHandle' name='ch' type='^{_PhidgetGyroscope=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHub_create'>
<arg declared_type='PhidgetHubHandle*' name='ch' type='^^{_PhidgetHub}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHub_delete'>
<arg declared_type='PhidgetHubHandle*' name='ch' type='^^{_PhidgetHub}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHub_setPortPower'>
<arg declared_type='PhidgetHubHandle' name='ch' type='^{_PhidgetHub=}'/>
<arg declared_type='int' name='port' type='i'/>
<arg declared_type='int' name='state' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_create'>
<arg declared_type='PhidgetHumiditySensorHandle*' name='ch' type='^^{_PhidgetHumiditySensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_delete'>
<arg declared_type='PhidgetHumiditySensorHandle*' name='ch' type='^^{_PhidgetHumiditySensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getDataInterval'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getHumidity'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double*' name='humidity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getHumidityChangeTrigger'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double*' name='humidityChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getMaxDataInterval'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getMaxHumidity'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double*' name='maxHumidity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getMaxHumidityChangeTrigger'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double*' name='maxHumidityChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getMinDataInterval'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getMinHumidity'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double*' name='minHumidity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_getMinHumidityChangeTrigger'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double*' name='minHumidityChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_setDataInterval'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_setHumidityChangeTrigger'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='double' name='humidityChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetHumiditySensor_setOnHumidityChangeHandler'>
<arg declared_type='PhidgetHumiditySensorHandle' name='ch' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='PhidgetHumiditySensor_OnHumidityChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHumiditySensorHandle' type='^{_PhidgetHumiditySensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_create'>
<arg declared_type='PhidgetIRHandle*' name='ch' type='^^{_PhidgetIR}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_delete'>
<arg declared_type='PhidgetIRHandle*' name='ch' type='^^{_PhidgetIR}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_getLastCode'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg declared_type='char*' name='code' type='*'/>
<arg declared_type='size_t' name='codeLength' type='L' type64='Q'/>
<arg declared_type='uint32_t*' name='bitCount' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_getLastLearnedCode'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg declared_type='char*' name='code' type='*'/>
<arg declared_type='size_t' name='codeLength' type='L' type64='Q'/>
<arg declared_type='PhidgetIR_CodeInfo*' name='codeInfo' type='^{_PhidgetIR_CodeInfo=IiiII[2I][2I][2I][26I]IdI[33c]}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_setOnCodeHandler'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg declared_type='PhidgetIR_OnCodeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetIRHandle' type='^{_PhidgetIR=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='uint32_t' type='I'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_setOnLearnHandler'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg declared_type='PhidgetIR_OnLearnCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetIRHandle' type='^{_PhidgetIR=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='PhidgetIR_CodeInfo*' type='^{_PhidgetIR_CodeInfo=IiiII[2I][2I][2I][26I]IdI[33c]}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_setOnRawDataHandler'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg declared_type='PhidgetIR_OnRawDataCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetIRHandle' type='^{_PhidgetIR=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='uint32_t*' type='^I'/>
<arg declared_type='size_t' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_transmit'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg const='true' declared_type='char*' name='code' type='*'/>
<arg declared_type='PhidgetIR_CodeInfo*' name='codeInfo' type='^{_PhidgetIR_CodeInfo=IiiII[2I][2I][2I][26I]IdI[33c]}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_transmitRaw'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<arg const='true' declared_type='uint32_t*' name='data' type='^I'/>
<arg declared_type='size_t' name='dataLength' type='L' type64='Q'/>
<arg declared_type='uint32_t' name='carrierFrequency' type='I'/>
<arg declared_type='double' name='dutyCycle' type='d'/>
<arg declared_type='uint32_t' name='gap' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetIR_transmitRepeat'>
<arg declared_type='PhidgetIRHandle' name='ch' type='^{_PhidgetIR=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_clear'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_clear_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_copy'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='srcFramebuffer' type='i'/>
<arg declared_type='int' name='dstFramebuffer' type='i'/>
<arg declared_type='int' name='srcX1' type='i'/>
<arg declared_type='int' name='srcY1' type='i'/>
<arg declared_type='int' name='srcX2' type='i'/>
<arg declared_type='int' name='srcY2' type='i'/>
<arg declared_type='int' name='dstX' type='i'/>
<arg declared_type='int' name='dstY' type='i'/>
<arg declared_type='int' name='inverted' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_copy_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='srcFramebuffer' type='i'/>
<arg declared_type='int' name='dstFramebuffer' type='i'/>
<arg declared_type='int' name='srcX1' type='i'/>
<arg declared_type='int' name='srcY1' type='i'/>
<arg declared_type='int' name='srcX2' type='i'/>
<arg declared_type='int' name='srcY2' type='i'/>
<arg declared_type='int' name='dstX' type='i'/>
<arg declared_type='int' name='dstY' type='i'/>
<arg declared_type='int' name='inverted' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_create'>
<arg declared_type='PhidgetLCDHandle*' name='ch' type='^^{_PhidgetLCD}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_delete'>
<arg declared_type='PhidgetLCDHandle*' name='ch' type='^^{_PhidgetLCD}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_drawLine'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='x1' type='i'/>
<arg declared_type='int' name='y1' type='i'/>
<arg declared_type='int' name='x2' type='i'/>
<arg declared_type='int' name='y2' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_drawLine_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='x1' type='i'/>
<arg declared_type='int' name='y1' type='i'/>
<arg declared_type='int' name='x2' type='i'/>
<arg declared_type='int' name='y2' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_drawPixel'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='x' type='i'/>
<arg declared_type='int' name='y' type='i'/>
<arg declared_type='PhidgetLCD_PixelState' name='pixelState' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_drawPixel_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='x' type='i'/>
<arg declared_type='int' name='y' type='i'/>
<arg declared_type='PhidgetLCD_PixelState' name='pixelState' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_drawRect'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='x1' type='i'/>
<arg declared_type='int' name='y1' type='i'/>
<arg declared_type='int' name='x2' type='i'/>
<arg declared_type='int' name='y2' type='i'/>
<arg declared_type='int' name='filled' type='i'/>
<arg declared_type='int' name='inverted' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_drawRect_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='x1' type='i'/>
<arg declared_type='int' name='y1' type='i'/>
<arg declared_type='int' name='x2' type='i'/>
<arg declared_type='int' name='y2' type='i'/>
<arg declared_type='int' name='filled' type='i'/>
<arg declared_type='int' name='inverted' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_flush'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_flush_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_getBacklight'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double*' name='backlight' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getContrast'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double*' name='contrast' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getCursorBlink'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int*' name='cursorBlink' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getCursorOn'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int*' name='cursorOn' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getFontSize'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg declared_type='int*' name='width' type='^i'/>
<arg declared_type='int*' name='height' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getFrameBuffer'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int*' name='frameBuffer' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getHeight'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int*' name='height' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getMaxBacklight'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double*' name='maxBacklight' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getMaxCharacters'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg declared_type='int*' name='maxCharacters' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getMaxContrast'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double*' name='maxContrast' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getMinBacklight'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double*' name='minBacklight' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getMinContrast'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double*' name='minContrast' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getScreenSize'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_ScreenSize*' name='screenSize' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getSleeping'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int*' name='sleeping' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_getWidth'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int*' name='width' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_initialize'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_saveFrameBuffer'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='frameBuffer' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_saveFrameBuffer_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='frameBuffer' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_setBacklight'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double' name='backlight' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setCharacterBitmap'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg const='true' declared_type='char*' name='character' type='*'/>
<arg const='true' declared_type='uint8_t*' name='bitmap' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setCharacterBitmap_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg const='true' declared_type='char*' name='character' type='*'/>
<arg const='true' declared_type='uint8_t*' name='bitmap' type='*'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_setContrast'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='double' name='contrast' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setCursorBlink'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='cursorBlink' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setCursorOn'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='cursorOn' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setFontSize'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg declared_type='int' name='width' type='i'/>
<arg declared_type='int' name='height' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setFrameBuffer'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='frameBuffer' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setFrameBuffer_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='frameBuffer' type='i'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_setScreenSize'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_ScreenSize' name='screenSize' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_setSleeping'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='sleeping' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_writeBitmap'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='xpos' type='i'/>
<arg declared_type='int' name='ypos' type='i'/>
<arg declared_type='int' name='xsize' type='i'/>
<arg declared_type='int' name='ysize' type='i'/>
<arg const='true' declared_type='uint8_t*' name='bitmap' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_writeBitmap_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='int' name='xpos' type='i'/>
<arg declared_type='int' name='ypos' type='i'/>
<arg declared_type='int' name='xsize' type='i'/>
<arg declared_type='int' name='ysize' type='i'/>
<arg const='true' declared_type='uint8_t*' name='bitmap' type='*'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLCD_writeText'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg declared_type='int' name='xpos' type='i'/>
<arg declared_type='int' name='ypos' type='i'/>
<arg const='true' declared_type='char*' name='text' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLCD_writeText_async'>
<arg declared_type='PhidgetLCDHandle' name='ch' type='^{_PhidgetLCD=}'/>
<arg declared_type='PhidgetLCD_Font' name='font' type='i'/>
<arg declared_type='int' name='xpos' type='i'/>
<arg declared_type='int' name='ypos' type='i'/>
<arg const='true' declared_type='char*' name='text' type='*'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetLightSensor_create'>
<arg declared_type='PhidgetLightSensorHandle*' name='ch' type='^^{_PhidgetLightSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_delete'>
<arg declared_type='PhidgetLightSensorHandle*' name='ch' type='^^{_PhidgetLightSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getDataInterval'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getIlluminance'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double*' name='illuminance' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getIlluminanceChangeTrigger'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double*' name='illuminanceChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getMaxDataInterval'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getMaxIlluminance'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double*' name='maxIlluminance' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getMaxIlluminanceChangeTrigger'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double*' name='maxIlluminanceChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getMinDataInterval'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getMinIlluminance'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double*' name='minIlluminance' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_getMinIlluminanceChangeTrigger'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double*' name='minIlluminanceChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_setDataInterval'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_setIlluminanceChangeTrigger'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='double' name='illuminanceChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLightSensor_setOnIlluminanceChangeHandler'>
<arg declared_type='PhidgetLightSensorHandle' name='ch' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='PhidgetLightSensor_OnIlluminanceChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetLightSensorHandle' type='^{_PhidgetLightSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_addSource'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='Phidget_LogLevel' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_disable'>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_disableNetwork'>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_disableRotating'>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_enable'>
<arg declared_type='Phidget_LogLevel' name='level' type='i'/>
<arg const='true' declared_type='char*' name='dest' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_enableNetwork'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_enableRotating'>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_getLevel'>
<arg declared_type='Phidget_LogLevel*' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_getRotating'>
<arg declared_type='uint64_t*' name='rotatesz' type='^Q'/>
<arg declared_type='int*' name='keep' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_getSourceLevel'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='Phidget_LogLevel*' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_getSources'>
<arg const='true' declared_type='char**' type='^*'/>
<arg declared_type='uint32_t*' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_isRotating'>
<arg declared_type='int*' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_log' variadic='true'>
<arg declared_type='Phidget_LogLevel' name='level' type='i'/>
<arg const='true' declared_type='char*' name='fmt' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_loge' variadic='true'>
<arg const='true' declared_type='char*' name='file' type='*'/>
<arg declared_type='int' name='line' type='i'/>
<arg const='true' declared_type='char*' name='func' type='*'/>
<arg const='true' declared_type='char*' name='src' type='*'/>
<arg declared_type='Phidget_LogLevel' name='level' type='i'/>
<arg const='true' declared_type='char*' name='fmt' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_loges'>
<arg declared_type='Phidget_LogLevel' name='level' type='i'/>
<arg const='true' declared_type='char*' name='srcname' type='*'/>
<arg const='true' declared_type='char*' name='str' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_logs'>
<arg declared_type='Phidget_LogLevel' name='level' type='i'/>
<arg const='true' declared_type='char*' name='str' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_rotate'>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_setLevel'>
<arg declared_type='Phidget_LogLevel' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_setRotating'>
<arg declared_type='uint64_t' name='rotatesz' type='Q'/>
<arg declared_type='int' name='keep' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetLog_setSourceLevel'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='Phidget_LogLevel' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_create'>
<arg declared_type='PhidgetMagnetometerHandle*' name='ch' type='^^{_PhidgetMagnetometer}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_delete'>
<arg declared_type='PhidgetMagnetometerHandle*' name='ch' type='^^{_PhidgetMagnetometer}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getAxisCount'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='int*' name='axisCount' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getDataInterval'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMagneticField'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double (*)*' name='magneticField' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMagneticFieldChangeTrigger'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double*' name='magneticFieldChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMaxDataInterval'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMaxMagneticField'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double (*)*' name='maxMagneticField' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMaxMagneticFieldChangeTrigger'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double*' name='maxMagneticFieldChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMinDataInterval'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMinMagneticField'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double (*)*' name='minMagneticField' type='^[3d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getMinMagneticFieldChangeTrigger'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double*' name='minMagneticFieldChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_getTimestamp'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double*' name='timestamp' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_resetCorrectionParameters'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_saveCorrectionParameters'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_setCorrectionParameters'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double' name='magField' type='d'/>
<arg declared_type='double' name='offset0' type='d'/>
<arg declared_type='double' name='offset1' type='d'/>
<arg declared_type='double' name='offset2' type='d'/>
<arg declared_type='double' name='gain0' type='d'/>
<arg declared_type='double' name='gain1' type='d'/>
<arg declared_type='double' name='gain2' type='d'/>
<arg declared_type='double' name='T0' type='d'/>
<arg declared_type='double' name='T1' type='d'/>
<arg declared_type='double' name='T2' type='d'/>
<arg declared_type='double' name='T3' type='d'/>
<arg declared_type='double' name='T4' type='d'/>
<arg declared_type='double' name='T5' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_setDataInterval'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_setMagneticFieldChangeTrigger'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='double' name='magneticFieldChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMagnetometer_setOnMagneticFieldChangeHandler'>
<arg declared_type='PhidgetMagnetometerHandle' name='ch' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='PhidgetMagnetometer_OnMagneticFieldChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetMagnetometerHandle' type='^{_PhidgetMagnetometer=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='double*' type='^d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_close'>
<arg declared_type='PhidgetManagerHandle' name='phidm' type='^{_PhidgetManager=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_create'>
<arg declared_type='PhidgetManagerHandle*' name='phidm' type='^^{_PhidgetManager}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_delete'>
<arg declared_type='PhidgetManagerHandle*' name='phidm' type='^^{_PhidgetManager}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_open'>
<arg declared_type='PhidgetManagerHandle' name='phidm' type='^{_PhidgetManager=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_setOnAttachHandler'>
<arg declared_type='PhidgetManagerHandle' name='phidm' type='^{_PhidgetManager=}'/>
<arg declared_type='PhidgetManager_OnAttachCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetManagerHandle' type='^{_PhidgetManager=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_setOnDetachHandler'>
<arg declared_type='PhidgetManagerHandle' name='phidm' type='^{_PhidgetManager=}'/>
<arg declared_type='PhidgetManager_OnDetachCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetManagerHandle' type='^{_PhidgetManager=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetManager_setOnErrorHandler'>
<arg declared_type='PhidgetManagerHandle' name='phidm' type='^{_PhidgetManager=}'/>
<arg declared_type='PhidgetManager_OnErrorCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetManagerHandle' type='^{_PhidgetManager=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Phidget_ErrorEventCode' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_addPositionOffset'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='positionOffset' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_create'>
<arg declared_type='PhidgetMotorPositionControllerHandle*' name='ch' type='^^{_PhidgetMotorPositionController}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_delete'>
<arg declared_type='PhidgetMotorPositionControllerHandle*' name='ch' type='^^{_PhidgetMotorPositionController}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getAcceleration'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='acceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getCurrentLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='currentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getCurrentRegulatorGain'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='currentRegulatorGain' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getDataInterval'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getDeadBand'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='deadBand' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getDutyCycle'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='dutyCycle' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getEngaged'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='int*' name='engaged' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getFanMode'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='Phidget_FanMode*' name='fanMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getIOMode'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='Phidget_EncoderIOMode*' name='IOMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getKd'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='kd' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getKp'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='kp' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxAcceleration'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='maxAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxCurrentLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='maxCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxCurrentRegulatorGain'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='maxCurrentRegulatorGain' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxDataInterval'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxPosition'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='maxPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxStallVelocity'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='maxStallVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMaxVelocityLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='maxVelocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinAcceleration'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='minAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinCurrentLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='minCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinCurrentRegulatorGain'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='minCurrentRegulatorGain' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinDataInterval'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinPosition'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='minPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinStallVelocity'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='minStallVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getMinVelocityLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='minVelocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getPosition'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='position' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getRescaleFactor'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='rescaleFactor' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getStallVelocity'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='stallVelocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getTargetPosition'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='targetPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_getVelocityLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double*' name='velocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setAcceleration'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='acceleration' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setCurrentLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='currentLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setCurrentRegulatorGain'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='currentRegulatorGain' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setDataInterval'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setDeadBand'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='deadBand' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setEngaged'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='int' name='engaged' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setFanMode'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='Phidget_FanMode' name='fanMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setIOMode'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='Phidget_EncoderIOMode' name='IOMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setKd'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='kd' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setKp'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='kp' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setOnDutyCycleUpdateHandler'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='PhidgetMotorPositionController_OnDutyCycleUpdateCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetMotorPositionControllerHandle' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setOnPositionChangeHandler'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='PhidgetMotorPositionController_OnPositionChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetMotorPositionControllerHandle' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setRescaleFactor'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='rescaleFactor' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setStallVelocity'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='stallVelocity' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setTargetPosition'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='targetPosition' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetMotorPositionController_setTargetPosition_async'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='targetPosition' type='d'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetMotorPositionController_setVelocityLimit'>
<arg declared_type='PhidgetMotorPositionControllerHandle' name='ch' type='^{_PhidgetMotorPositionController=}'/>
<arg declared_type='double' name='velocityLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_addServer'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_disableServer'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg declared_type='int' name='flags' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_disableServerDiscovery'>
<arg declared_type='PhidgetServerType' name='srvt' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_enableServer'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_enableServerDiscovery'>
<arg declared_type='PhidgetServerType' name='srvt' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_removeServer'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_setOnServerAddedHandler'>
<arg declared_type='PhidgetNet_OnServerAddedCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetServerHandle' type='^{_PhidgetServerHandle=**ii**i^v}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_setOnServerRemovedHandler'>
<arg declared_type='PhidgetNet_OnServerRemovedCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetServerHandle' type='^{_PhidgetServerHandle=**ii**i^v}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_setServerPassword'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='passwd' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_startServer'>
<arg declared_type='int' name='flags' type='i'/>
<arg declared_type='int' name='af' type='i'/>
<arg const='true' declared_type='char*' name='srvname' type='*'/>
<arg const='true' declared_type='char*' name='address' type='*'/>
<arg declared_type='int' name='port' type='i'/>
<arg const='true' declared_type='char*' name='passwd' type='*'/>
<arg declared_type='PhidgetServerHandle*' name='server' type='^^{?}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetNet_stopServer'>
<arg declared_type='PhidgetServerHandle*' name='server' type='^^{?}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_create'>
<arg declared_type='PhidgetPHSensorHandle*' name='ch' type='^^{_PhidgetPHSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_delete'>
<arg declared_type='PhidgetPHSensorHandle*' name='ch' type='^^{_PhidgetPHSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getCorrectionTemperature'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='correctionTemperature' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getDataInterval'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMaxCorrectionTemperature'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='maxCorrectionTemperature' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMaxDataInterval'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMaxPH'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='maxPH' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMaxPHChangeTrigger'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='maxPHChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMinCorrectionTemperature'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='minCorrectionTemperature' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMinDataInterval'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMinPH'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='minPH' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getMinPHChangeTrigger'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='minPHChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getPH'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='PH' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_getPHChangeTrigger'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double*' name='PHChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_setCorrectionTemperature'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double' name='correctionTemperature' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_setDataInterval'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_setOnPHChangeHandler'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='PhidgetPHSensor_OnPHChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetPHSensorHandle' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPHSensor_setPHChangeTrigger'>
<arg declared_type='PhidgetPHSensorHandle' name='ch' type='^{_PhidgetPHSensor=}'/>
<arg declared_type='double' name='PHChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_create'>
<arg declared_type='PhidgetPowerGuardHandle*' name='ch' type='^^{_PhidgetPowerGuard}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_delete'>
<arg declared_type='PhidgetPowerGuardHandle*' name='ch' type='^^{_PhidgetPowerGuard}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_getFanMode'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='Phidget_FanMode*' name='fanMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_getMaxOverVoltage'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='double*' name='maxOverVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_getMinOverVoltage'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='double*' name='minOverVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_getOverVoltage'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='double*' name='overVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_getPowerEnabled'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='int*' name='powerEnabled' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_setFanMode'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='Phidget_FanMode' name='fanMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_setOverVoltage'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='double' name='overVoltage' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPowerGuard_setPowerEnabled'>
<arg declared_type='PhidgetPowerGuardHandle' name='ch' type='^{_PhidgetPowerGuard=}'/>
<arg declared_type='int' name='powerEnabled' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_create'>
<arg declared_type='PhidgetPressureSensorHandle*' name='ch' type='^^{_PhidgetPressureSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_delete'>
<arg declared_type='PhidgetPressureSensorHandle*' name='ch' type='^^{_PhidgetPressureSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getDataInterval'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getMaxDataInterval'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getMaxPressure'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double*' name='maxPressure' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getMaxPressureChangeTrigger'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double*' name='maxPressureChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getMinDataInterval'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getMinPressure'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double*' name='minPressure' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getMinPressureChangeTrigger'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double*' name='minPressureChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getPressure'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double*' name='pressure' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_getPressureChangeTrigger'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double*' name='pressureChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_setDataInterval'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_setOnPressureChangeHandler'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='PhidgetPressureSensor_OnPressureChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetPressureSensorHandle' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetPressureSensor_setPressureChangeTrigger'>
<arg declared_type='PhidgetPressureSensorHandle' name='ch' type='^{_PhidgetPressureSensor=}'/>
<arg declared_type='double' name='pressureChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_create'>
<arg declared_type='PhidgetRCServoHandle*' name='ch' type='^^{_PhidgetRCServo}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_delete'>
<arg declared_type='PhidgetRCServoHandle*' name='ch' type='^^{_PhidgetRCServo}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getAcceleration'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='acceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getDataInterval'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getEngaged'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='int*' name='engaged' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getIsMoving'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='int*' name='isMoving' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxAcceleration'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='maxAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxDataInterval'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='maxPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxPulseWidth'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='maxPulseWidth' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxPulseWidthLimit'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='maxPulseWidthLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxTorque'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='maxTorque' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMaxVelocityLimit'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='maxVelocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinAcceleration'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='minAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinDataInterval'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='minPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinPulseWidth'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='minPulseWidth' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinPulseWidthLimit'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='minPulseWidthLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinTorque'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='minTorque' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getMinVelocityLimit'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='minVelocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='position' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getSpeedRampingState'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='int*' name='speedRampingState' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getTargetPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='targetPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getTorque'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='torque' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getVelocity'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='velocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getVelocityLimit'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double*' name='velocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_getVoltage'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='PhidgetRCServo_Voltage*' name='voltage' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setAcceleration'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='acceleration' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setDataInterval'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setEngaged'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='int' name='engaged' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setMaxPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='maxPosition' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setMaxPulseWidth'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='maxPulseWidth' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setMinPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='minPosition' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setMinPulseWidth'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='minPulseWidth' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setOnPositionChangeHandler'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='PhidgetRCServo_OnPositionChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetRCServoHandle' type='^{_PhidgetRCServo=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setOnTargetPositionReachedHandler'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='PhidgetRCServo_OnTargetPositionReachedCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetRCServoHandle' type='^{_PhidgetRCServo=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setOnVelocityChangeHandler'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='PhidgetRCServo_OnVelocityChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetRCServoHandle' type='^{_PhidgetRCServo=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setSpeedRampingState'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='int' name='speedRampingState' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setTargetPosition'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='targetPosition' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setTargetPosition_async'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='targetPosition' type='d'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetRCServo_setTorque'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='torque' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setVelocityLimit'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='double' name='velocityLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRCServo_setVoltage'>
<arg declared_type='PhidgetRCServoHandle' name='ch' type='^{_PhidgetRCServo=}'/>
<arg declared_type='PhidgetRCServo_Voltage' name='voltage' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_create'>
<arg declared_type='PhidgetRFIDHandle*' name='ch' type='^^{_PhidgetRFID}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_delete'>
<arg declared_type='PhidgetRFIDHandle*' name='ch' type='^^{_PhidgetRFID}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_getAntennaEnabled'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg declared_type='int*' name='antennaEnabled' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_getLastTag'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg declared_type='char*' name='tagString' type='*'/>
<arg declared_type='size_t' name='tagStringLen' type='L' type64='Q'/>
<arg declared_type='PhidgetRFID_Protocol*' name='protocol' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_getTagPresent'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg declared_type='int*' name='tagPresent' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_setAntennaEnabled'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg declared_type='int' name='antennaEnabled' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_setOnTagHandler'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg declared_type='PhidgetRFID_OnTagCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetRFIDHandle' type='^{_PhidgetRFID=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='PhidgetRFID_Protocol' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_setOnTagLostHandler'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg declared_type='PhidgetRFID_OnTagLostCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetRFIDHandle' type='^{_PhidgetRFID=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='PhidgetRFID_Protocol' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetRFID_write'>
<arg declared_type='PhidgetRFIDHandle' name='ch' type='^{_PhidgetRFID=}'/>
<arg const='true' declared_type='char*' name='tagString' type='*'/>
<arg declared_type='PhidgetRFID_Protocol' name='protocol' type='i'/>
<arg declared_type='int' name='lockTag' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_create'>
<arg declared_type='PhidgetResistanceInputHandle*' name='ch' type='^^{_PhidgetResistanceInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_delete'>
<arg declared_type='PhidgetResistanceInputHandle*' name='ch' type='^^{_PhidgetResistanceInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getDataInterval'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getMaxDataInterval'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getMaxResistance'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double*' name='maxResistance' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getMaxResistanceChangeTrigger'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double*' name='maxResistanceChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getMinDataInterval'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getMinResistance'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double*' name='minResistance' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getMinResistanceChangeTrigger'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double*' name='minResistanceChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getRTDWireSetup'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='Phidget_RTDWireSetup*' name='RTDWireSetup' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getResistance'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double*' name='resistance' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_getResistanceChangeTrigger'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double*' name='resistanceChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_setDataInterval'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_setOnResistanceChangeHandler'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='PhidgetResistanceInput_OnResistanceChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetResistanceInputHandle' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_setRTDWireSetup'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='Phidget_RTDWireSetup' name='RTDWireSetup' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetResistanceInput_setResistanceChangeTrigger'>
<arg declared_type='PhidgetResistanceInputHandle' name='ch' type='^{_PhidgetResistanceInput=}'/>
<arg declared_type='double' name='resistanceChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_create'>
<arg declared_type='PhidgetSoundSensorHandle*' name='ch' type='^^{_PhidgetSoundSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_delete'>
<arg declared_type='PhidgetSoundSensorHandle*' name='ch' type='^^{_PhidgetSoundSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getDataInterval'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getMaxDataInterval'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getMaxSPLChangeTrigger'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='maxSPLChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getMaxdB'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='maxdB' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getMinDataInterval'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getMinSPLChangeTrigger'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='minSPLChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getNoiseFloor'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='noiseFloor' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getOctaves'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double (*)*' name='octaves' type='^[10d]'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getSPLChangeTrigger'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='SPLChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getSPLRange'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='PhidgetSoundSensor_SPLRange*' name='SPLRange' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getdB'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='dB' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getdBA'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='dBA' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_getdBC'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double*' name='dBC' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_setDataInterval'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_setOnSPLChangeHandler'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='PhidgetSoundSensor_OnSPLChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetSoundSensorHandle' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg const='true' declared_type='double*' type='^d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_setSPLChangeTrigger'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='double' name='SPLChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSoundSensor_setSPLRange'>
<arg declared_type='PhidgetSoundSensorHandle' name='ch' type='^{_PhidgetSoundSensor=}'/>
<arg declared_type='PhidgetSoundSensor_SPLRange' name='SPLRange' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_create'>
<arg declared_type='PhidgetSpatialHandle*' name='ch' type='^^{_PhidgetSpatial}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_delete'>
<arg declared_type='PhidgetSpatialHandle*' name='ch' type='^^{_PhidgetSpatial}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_getDataInterval'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_getMaxDataInterval'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_getMinDataInterval'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_resetMagnetometerCorrectionParameters'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_saveMagnetometerCorrectionParameters'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_setDataInterval'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_setMagnetometerCorrectionParameters'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<arg declared_type='double' name='magField' type='d'/>
<arg declared_type='double' name='offset0' type='d'/>
<arg declared_type='double' name='offset1' type='d'/>
<arg declared_type='double' name='offset2' type='d'/>
<arg declared_type='double' name='gain0' type='d'/>
<arg declared_type='double' name='gain1' type='d'/>
<arg declared_type='double' name='gain2' type='d'/>
<arg declared_type='double' name='T0' type='d'/>
<arg declared_type='double' name='T1' type='d'/>
<arg declared_type='double' name='T2' type='d'/>
<arg declared_type='double' name='T3' type='d'/>
<arg declared_type='double' name='T4' type='d'/>
<arg declared_type='double' name='T5' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_setOnSpatialDataHandler'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<arg declared_type='PhidgetSpatial_OnSpatialDataCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetSpatialHandle' type='^{_PhidgetSpatial=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='double*' type='^d'/>
<arg const='true' declared_type='double*' type='^d'/>
<arg const='true' declared_type='double*' type='^d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetSpatial_zeroGyro'>
<arg declared_type='PhidgetSpatialHandle' name='ch' type='^{_PhidgetSpatial=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_addPositionOffset'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='positionOffset' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_create'>
<arg declared_type='PhidgetStepperHandle*' name='ch' type='^^{_PhidgetStepper}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_delete'>
<arg declared_type='PhidgetStepperHandle*' name='ch' type='^^{_PhidgetStepper}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getAcceleration'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='acceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getControlMode'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='PhidgetStepper_ControlMode*' name='controlMode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getCurrentLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='currentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getDataInterval'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getEngaged'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='int*' name='engaged' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getHoldingCurrentLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='holdingCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getIsMoving'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='int*' name='isMoving' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMaxAcceleration'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='maxAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMaxCurrentLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='maxCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMaxDataInterval'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMaxPosition'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='maxPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMaxVelocityLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='maxVelocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMinAcceleration'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='minAcceleration' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMinCurrentLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='minCurrentLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMinDataInterval'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMinPosition'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='minPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getMinVelocityLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='minVelocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getPosition'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='position' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getRescaleFactor'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='rescaleFactor' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getTargetPosition'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='targetPosition' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getVelocity'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='velocity' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_getVelocityLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double*' name='velocityLimit' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setAcceleration'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='acceleration' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setControlMode'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='PhidgetStepper_ControlMode' name='controlMode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setCurrentLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='currentLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setDataInterval'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setEngaged'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='int' name='engaged' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setHoldingCurrentLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='holdingCurrentLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setOnPositionChangeHandler'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='PhidgetStepper_OnPositionChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetStepperHandle' type='^{_PhidgetStepper=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setOnStoppedHandler'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='PhidgetStepper_OnStoppedCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetStepperHandle' type='^{_PhidgetStepper=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setOnVelocityChangeHandler'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='PhidgetStepper_OnVelocityChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetStepperHandle' type='^{_PhidgetStepper=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setRescaleFactor'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='rescaleFactor' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setTargetPosition'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='targetPosition' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetStepper_setTargetPosition_async'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='targetPosition' type='d'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetStepper_setVelocityLimit'>
<arg declared_type='PhidgetStepperHandle' name='ch' type='^{_PhidgetStepper=}'/>
<arg declared_type='double' name='velocityLimit' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_create'>
<arg declared_type='PhidgetTemperatureSensorHandle*' name='ch' type='^^{_PhidgetTemperatureSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_delete'>
<arg declared_type='PhidgetTemperatureSensorHandle*' name='ch' type='^^{_PhidgetTemperatureSensor}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getDataInterval'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getMaxDataInterval'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getMaxTemperature'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double*' name='maxTemperature' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getMaxTemperatureChangeTrigger'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double*' name='maxTemperatureChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getMinDataInterval'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getMinTemperature'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double*' name='minTemperature' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getMinTemperatureChangeTrigger'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double*' name='minTemperatureChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getRTDType'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='PhidgetTemperatureSensor_RTDType*' name='RTDType' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getRTDWireSetup'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='Phidget_RTDWireSetup*' name='RTDWireSetup' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getTemperature'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double*' name='temperature' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getTemperatureChangeTrigger'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double*' name='temperatureChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_getThermocoupleType'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='PhidgetTemperatureSensor_ThermocoupleType*' name='thermocoupleType' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_setDataInterval'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_setOnTemperatureChangeHandler'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='PhidgetTemperatureSensor_OnTemperatureChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetTemperatureSensorHandle' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_setRTDType'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='PhidgetTemperatureSensor_RTDType' name='RTDType' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_setRTDWireSetup'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='Phidget_RTDWireSetup' name='RTDWireSetup' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_setTemperatureChangeTrigger'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='double' name='temperatureChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetTemperatureSensor_setThermocoupleType'>
<arg declared_type='PhidgetTemperatureSensorHandle' name='ch' type='^{_PhidgetTemperatureSensor=}'/>
<arg declared_type='PhidgetTemperatureSensor_ThermocoupleType' name='thermocoupleType' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_create'>
<arg declared_type='PhidgetVoltageInputHandle*' name='ch' type='^^{_PhidgetVoltageInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_delete'>
<arg declared_type='PhidgetVoltageInputHandle*' name='ch' type='^^{_PhidgetVoltageInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getDataInterval'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getMaxDataInterval'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getMaxVoltage'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='maxVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getMaxVoltageChangeTrigger'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='maxVoltageChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getMinDataInterval'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getMinVoltage'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='minVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getMinVoltageChangeTrigger'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='minVoltageChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getPowerSupply'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='Phidget_PowerSupply*' name='powerSupply' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getSensorType'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='PhidgetVoltageInput_SensorType*' name='sensorType' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getSensorUnit'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='Phidget_UnitInfo*' name='sensorUnit' type='^{_Phidget_UnitInfo=i**}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getSensorValue'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='sensorValue' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getSensorValueChangeTrigger'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='sensorValueChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getVoltage'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='voltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getVoltageChangeTrigger'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double*' name='voltageChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_getVoltageRange'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='PhidgetVoltageInput_VoltageRange*' name='voltageRange' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setDataInterval'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setOnSensorChangeHandler'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='PhidgetVoltageInput_OnSensorChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetVoltageInputHandle' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<arg declared_type='Phidget_UnitInfo*' type='^{_Phidget_UnitInfo=i**}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setOnVoltageChangeHandler'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='PhidgetVoltageInput_OnVoltageChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetVoltageInputHandle' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setPowerSupply'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='Phidget_PowerSupply' name='powerSupply' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setSensorType'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='PhidgetVoltageInput_SensorType' name='sensorType' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setSensorValueChangeTrigger'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double' name='sensorValueChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setVoltageChangeTrigger'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='double' name='voltageChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageInput_setVoltageRange'>
<arg declared_type='PhidgetVoltageInputHandle' name='ch' type='^{_PhidgetVoltageInput=}'/>
<arg declared_type='PhidgetVoltageInput_VoltageRange' name='voltageRange' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_create'>
<arg declared_type='PhidgetVoltageOutputHandle*' name='ch' type='^^{_PhidgetVoltageOutput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_delete'>
<arg declared_type='PhidgetVoltageOutputHandle*' name='ch' type='^^{_PhidgetVoltageOutput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_getEnabled'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='int*' name='enabled' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_getMaxVoltage'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='double*' name='maxVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_getMinVoltage'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='double*' name='minVoltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_getVoltage'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='double*' name='voltage' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_getVoltageOutputRange'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='PhidgetVoltageOutput_VoltageOutputRange*' name='voltageOutputRange' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_setEnabled'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='int' name='enabled' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_setVoltage'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='double' name='voltage' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_setVoltageOutputRange'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='PhidgetVoltageOutput_VoltageOutputRange' name='voltageOutputRange' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageOutput_setVoltage_async'>
<arg declared_type='PhidgetVoltageOutputHandle' name='ch' type='^{_PhidgetVoltageOutput=}'/>
<arg declared_type='double' name='voltage' type='d'/>
<arg declared_type='Phidget_AsyncCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PhidgetReturnCode' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PhidgetVoltageRatioInput_create'>
<arg declared_type='PhidgetVoltageRatioInputHandle*' name='ch' type='^^{_PhidgetVoltageRatioInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_delete'>
<arg declared_type='PhidgetVoltageRatioInputHandle*' name='ch' type='^^{_PhidgetVoltageRatioInput}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getBridgeEnabled'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='int*' name='bridgeEnabled' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getBridgeGain'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='PhidgetVoltageRatioInput_BridgeGain*' name='bridgeGain' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getDataInterval'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='uint32_t*' name='dataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getMaxDataInterval'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='uint32_t*' name='maxDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getMaxVoltageRatio'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='maxVoltageRatio' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getMaxVoltageRatioChangeTrigger'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='maxVoltageRatioChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getMinDataInterval'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='uint32_t*' name='minDataInterval' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getMinVoltageRatio'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='minVoltageRatio' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getMinVoltageRatioChangeTrigger'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='minVoltageRatioChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getSensorType'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='PhidgetVoltageRatioInput_SensorType*' name='sensorType' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getSensorUnit'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='Phidget_UnitInfo*' name='sensorUnit' type='^{_Phidget_UnitInfo=i**}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getSensorValue'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='sensorValue' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getSensorValueChangeTrigger'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='sensorValueChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getVoltageRatio'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='voltageRatio' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_getVoltageRatioChangeTrigger'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double*' name='voltageRatioChangeTrigger' type='^d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setBridgeEnabled'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='int' name='bridgeEnabled' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setBridgeGain'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='PhidgetVoltageRatioInput_BridgeGain' name='bridgeGain' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setDataInterval'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='uint32_t' name='dataInterval' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setOnSensorChangeHandler'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='PhidgetVoltageRatioInput_OnSensorChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetVoltageRatioInputHandle' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<arg declared_type='Phidget_UnitInfo*' type='^{_Phidget_UnitInfo=i**}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setOnVoltageRatioChangeHandler'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='PhidgetVoltageRatioInput_OnVoltageRatioChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetVoltageRatioInputHandle' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setSensorType'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='PhidgetVoltageRatioInput_SensorType' name='sensorType' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setSensorValueChangeTrigger'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double' name='sensorValueChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='PhidgetVoltageRatioInput_setVoltageRatioChangeTrigger'>
<arg declared_type='PhidgetVoltageRatioInputHandle' name='ch' type='^{_PhidgetVoltageRatioInput=}'/>
<arg declared_type='double' name='voltageRatioChangeTrigger' type='d'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_close'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_delete'>
<arg declared_type='PhidgetHandle*' name='phid' type='^^{_Phidget}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_enumFromString'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Phidget_enumString'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='Phidget_finalize'>
<arg declared_type='int' name='flags' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getAttached'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='attached' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getChannel'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='channel' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getChannelClass'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_ChannelClass*' name='channelClass' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getChannelClassName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='channelClassName' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getChannelName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='channelName' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getChannelSubclass'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_ChannelSubclass*' name='channelSubclass' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getChildDevices'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='PhidgetHandle*' name='arr' type='^^{_Phidget}'/>
<arg declared_type='size_t*' name='arrCnt' type='^I' type64='^Q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDataInterval'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='uint32_t*' name='di' type='^I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceClass'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_DeviceClass*' name='deviceClass' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceClassName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='deviceClassName' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceID'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_DeviceID*' name='deviceID' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceLabel'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='deviceLabel' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='deviceName' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceSKU'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='deviceSKU' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceSerialNumber'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int32_t*' name='deviceSerialNumber' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getDeviceVersion'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='deviceVersion' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getErrorDescription'>
<arg declared_type='PhidgetReturnCode' name='errorCode' type='i'/>
<arg const='true' declared_type='char**' name='errorString' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getHub'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='PhidgetHandle*' name='hub' type='^^{_Phidget}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getHubPort'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='hubPort' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getHubPortCount'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='hubPortCount' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getIsChannel'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='isChannel' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getIsHubPortDevice'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='isHubPortDevice' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getIsLocal'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='isLocal' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getIsRemote'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int*' name='isRemote' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getLibraryVersion'>
<arg const='true' declared_type='char**' name='libraryVersion' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getMeshMode'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_MeshMode*' name='mode' type='^i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getParent'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='PhidgetHandle*' name='parent' type='^^{_Phidget}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getServerHostname'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='serverHostname' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getServerName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='serverName' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_getServerPeerName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char**' name='serverPeerName' type='^*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_open'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_openWaitForAttachment'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='uint32_t' name='timeoutMs' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_release'>
<arg declared_type='PhidgetHandle*' name='phid' type='^^{_Phidget}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_releaseDevices'>
<arg declared_type='PhidgetHandle*' name='arr' type='^^{_Phidget}'/>
<arg declared_type='size_t' name='arrCnt' type='L' type64='Q'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_retain'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setChannel'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int' name='channel' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setDataInterval'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='uint32_t' name='di' type='I'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setDeviceLabel'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char*' name='deviceLabel' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setDeviceSerialNumber'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int32_t' name='deviceSerialNumber' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setHubPort'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int' name='hubPort' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setIsHubPortDevice'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int' name='isHubPortDevice' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setIsLocal'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int' name='isLocal' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setIsRemote'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='int' name='isRemote' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setMeshMode'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_MeshMode' name='mode' type='i'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setOnAttachHandler'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_OnAttachCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setOnDetachHandler'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_OnDetachCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setOnErrorHandler'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_OnErrorCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Phidget_ErrorEventCode' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setOnPropertyChangeHandler'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg declared_type='Phidget_OnPropertyChangeCallback' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='PhidgetHandle' type='^{_Phidget=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setOnWakeupHandler'>
<arg declared_type='void (*)(void *)' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setOnWillSleepHandler'>
<arg declared_type='void (*)(void *)' function_pointer='true' name='fptr' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='ctx' type='^v'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_setServerName'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
<function name='Phidget_validDictionaryKey'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='Phidget_writeDeviceLabel'>
<arg declared_type='PhidgetHandle' name='phid' type='^{_Phidget=}'/>
<arg const='true' declared_type='char*' name='deviceLabel' type='*'/>
<retval declared_type='PhidgetReturnCode' type='i'/>
</function>
</signatures>
